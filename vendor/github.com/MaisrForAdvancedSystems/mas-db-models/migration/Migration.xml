<?xml version="1.0" encoding="utf-8" ?>
<migs>

  <mig version="2.2">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD  STATION_NO INT NULL "/>
      <stm sql="UPDATE HH_BCYC SET STATION_NO = BRANCH_ID WHERE STATION_NO IS NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  IS_METER_WALK BIT NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  IS_CUSTOMER_WALK BIT NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  CLOSE_INDEVICE_COLlECTED BIT NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  CLOSE_INDEVICE_READED BIT NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  CLOSE_INDEVICE_DATE_R DATE NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  CLOSE_INDEVICE_DATE_C DATE NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  IS_REVIRSE_C BIT NULL "/>
      <stm sql="ALTER TABLE HH_BCYC ADD  IS_REVIRSE_R BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.2 "/>
    </stms>
  </mig>
  <mig version="2.3">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD COLLECTION_DAY AS (Convert(Date,COLLECTION_DATE));" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.3 "/>
    </stms>
  </mig>
  <mig version="2.31">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_CANCELLED_C BIT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_CANCELLED_R BIT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CANCEL_DATE_C DATETIME NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CANCEL_DATE_R DATETIME NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CANCEL_BY_C NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CANCEL_BY_R NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_LOCKED_C BIT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_LOCKED_R BIT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.31 "/>
    </stms>
  </mig>
  <mig version="2.6">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD NOTE_C NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD NOTE_R NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD FLAGE_C INT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD FLAGE_R INT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD VALUE_C FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD VALUE_R FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD STR_VALUE_C1 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD STR_VALUE_R1 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD STR_VALUE_C2 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD STR_VALUE_R2 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD FAX_NO NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD TEL NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD NID NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD EMAIL NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE EMP ADD NID NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE EMP ADD EMAIL NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE EMP ADD ALOOW_CANCEL BIT NULL;" />
      <stm sql="ALTER TABLE EMP ADD ALLOW_MODIFY_READING BIT NULL;" />
      <stm sql="ALTER TABLE EMP ADD FLAGE1 BIT NULL;" />
      <stm sql="ALTER TABLE EMP ADD FLAGE2 BIT NULL;" />
      <stm sql="ALTER TABLE EMP ADD VALUE1 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE EMP ADD VALUE2 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE USERS ADD NID NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE USERS ADD EMAIL NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_COLLECTION BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_MODIFY_READING BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_DEPOSIT BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALOOW_CANCEL BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_POST_C BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_POST_R BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE1 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE2 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE3 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE4 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE5 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE7 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE8 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE9 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD FLAGE10 BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD VALUE1 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE USERS ADD VALUE2 NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FLAGE1 BIT NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FLAGE2 BIT NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FLAGE3 BIT NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD NOTE_C NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD NOTE_R NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD NOTE_DATE_C DATETIME NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD NOTE_DATE_R DATETIME NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD NOTE_DATE_C DATETIME NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD NOTE_DATE_R DATETIME NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD EMP_ID INT NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD CANCEL_AMOUNT FLOAT NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD CANCEL_BY FLOAT NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD CANCEL_DATE DATETIME NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD NET_AMOUNT FLOAT NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD FALGE1 BIT NULL;" />
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD FALGE2 BIT NULL;" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MinCLBlnce',1)" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.6 "/>
    </stms>
  </mig>
  <mig version="2.7">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD COLLECTED_BY NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_COMPENSATE BIT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD COMPENSATE_PAYMENTNO NVARCHAR(50) NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD HHDEVICE_VERSION NVARCHAR(50) NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.7 "/>
    </stms>
  </mig>
  <mig version="2.71">
    <stms>
      <stm sql="ALTER TABLE EMP ADD ALLOW_CANCEL BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_COMPENSATION BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_CANCEL BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD IS_ENC BIT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.71 "/>
    </stms>
  </mig>
  <mig version="2.72">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_MAPS BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_READING BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_COLLECTION BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_LOCATION BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_PATH BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_COMPLAINTS BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD MAP_BAD_CONN BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD WALK_ARRANGE_POST BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD UPDATE_CUSTOMER_LOCATION BIT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.72 "/>
    </stms>
  </mig>
  <mig version="2.73">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_CANCEL_DEP_COL BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_RECOL_CANCEL BIT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.73 "/>
    </stms>
  </mig>
  <mig version="2.74">
    <stms>
      <stm sql="ALTER TABLE USERS ADD FLAGE6 BIT NULL;" />
      <stm sql="insert into settings (KEY_WORD,KeY_VALUE) values('DisableCollection',0);" />
      <stm sql="insert into settings (KEY_WORD,KeY_VALUE) values('CheckBefourHHClose',1);" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.74 "/>
    </stms>
  </mig>
  <mig version="2.75" date="13/12/2015">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_LOADDATA_C BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_LOADDATA_R BIT NULL;" />
      <stm sql="UPDATE USERS SET ALLOW_LOADDATA_C=ALLOW_POST_C" />
      <stm sql="UPDATE USERS SET ALLOW_LOADDATA_R=ALLOW_POST_R" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.75 "/>
    </stms>
  </mig>
  <mig version="2.76" date="22/12/2015">
    <stms>
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD IS_POSTED BIT NULL;" />
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD CYCLE_ID INT NULL;" />
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD POST_DATE DATETIME NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.76 "/>
    </stms>
  </mig>
  <mig version="2.77" date="26/12/2015">
    <stms>
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD PROP_REF NVARCHAR(50) NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.77 "/>
    </stms>
  </mig>
  <mig version="2.78" date="26/12/2015">
    <stms>
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD IS_POSTED_R BIT NULL;" />
      <stm sql="ALTER TABLE CUSTOMER_SEQUENCE ADD IS_POSTED_C BIT NULL;" />
      <stm sql="ALTER TABLE STATIONS ADD PORT_NO INT NULL;" />
      <stm sql="UPDATE STATIONS SET PORT_NO=26606;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.78 "/>
    </stms>
  </mig>
  <mig version="2.79" date="26/12/2015">
    <stms>
      <stm sql="select * into BRANCH_HH_BCYC FROM HH_BCYC WHERE 1=0;" />
      <stm sql="alter table HH_BCYC ADD IS_NOTIFIED BIT NULL"/>
      <stm sql="alter table HH_BCYC ADD NOTIFICATION_DATE DATE NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.79 "/>
    </stms>
  </mig>

  <mig version="2.80" date="04/04/2016">
    <stms>
      <stm sql="INSERt INTO SETTINGS (KEY_WORD,KEY_VALUE) values('MaxLocationPoints','1000')" />
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) values('MinDistance','2')" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.80 "/>
    </stms>
  </mig>
  <mig version="2.81" date="01/05/2016">
    <stms>
      <stm sql="SELECT * into ARC_HAND_MH_ST from HAND_MH_ST WHERE 1=0"/>
      <stm sql="alter table HAND_MH_ST ADD LAT_REF FLOAT NULL"/>
      <stm sql="alter table HAND_MH_ST ADD LNG_REF FLOAT NULL"/>
      <stm sql="alter table HAND_MH_ST ADD IS_REF BIT NULL"/>
      <stm sql="alter table HAND_MH_ST ADD DISTANCE_REF FLOAT NULL"/>
      <stm sql="alter table HAND_MH_ST ADD OPERATION_FLAGE INT NULL"/>
      <stm sql="alter table HAND_MH_ST ADD READING_DISTANCE FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD DISTANCE_REF FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD LAT_MIN FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD LAT_MAX FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD LNG_MIN FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD LNG_MAX FLOAT NULL"/>
      <stm sql="alter table METER_BOOKS ADD APPLY_REF INT NULL"/>
      <stm sql="alter table METER_BOOKS ADD REF_DATE DATE NULL"/>
      <stm sql="alter table METER_BOOKS ADD SHAPE NCHAR(30) NULL"/>
      <stm sql="alter table METER_BOOKS ADD PATH NCHAR(1024) NULL"/>
      <stm sql="alter table HH_BCYC ADD LAT_MIN FLOAT NULL"/>
      <stm sql="alter table HH_BCYC ADD LAT_MAX FLOAT NULL"/>
      <stm sql="alter table HH_BCYC ADD LNG_MIN FLOAT NULL"/>
      <stm sql="alter table HH_BCYC ADD LNG_MAX FLOAT NULL"/>
      <stm sql="alter table HH_BCYC ADD APPLY_REF INT NULL"/>
      <stm sql="alter table CUSTOMER_LOCATIONS ADD OPERATION_FLAGE INT NULL"/>
      <stm sql="alter table CUSTOMER_LOCATIONS ADD DISTANCE_REF FLOAT NULL"/>
      <stm sql="CREATE TABLE WALK_POINTS (BOOK_NO nchar(10) NOT NULL,WALK_NO INT NOT NULL,ID INT NOT NULL,LAT FLOAT NOT NULL,LNG FLOAT NOT NULL,ANGLE FLOAT,DATA NVARCHAR(50));
" />
      <stm sql="ALTER TABLE  WALK_POINTS ADD CONSTRAINT PK_WALK_POINTS PRIMARY KEY CLUSTERED  (BOOK_NO,WALK_NO,ID) ON [PRIMARY]" />
      <stm sql="CREATE TABLE WALK_KEY_POINTS (BOOK_NO nchar(10) NOT NULL,WALK_NO INT NOT NULL,ID INT NOT NULL,LAT FLOAT NOT NULL,LNG FLOAT NOT NULL,ANGLE FLOAT,DATA NVARCHAR(50));
" />
      <stm sql="ALTER TABLE  WALK_KEY_POINTS ADD CONSTRAINT PK_WALK_KEY_POINTS PRIMARY KEY CLUSTERED  (BOOK_NO,WALK_NO,ID) ON [PRIMARY]" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=2.81 "/>
    </stms>
  </mig>
  <mig version="3" date="12/5/2016">
    <stms>
      <stm sql="CREATE TABLE [dbo].[CUSTOMER_WALKS](
	[STATION_NO] [int] NOT NULL,
	[BOOK_NO] [nvarchar](20) NOT NULL,
	[WALK_NO] [nvarchar](10) NOT NULL,
	[DESCRIBE] [nvarchar](512) NULL,
	[BILLGROUP] [nvarchar](20) NULL,
	[ASSIGNED_TO_HH] [int] NULL,
	[UNUSED] [bit] NULL,
 CONSTRAINT [PK_ CUSTOMER_WALKS] PRIMARY KEY CLUSTERED
(
	[STATION_NO] ASC,
	[BOOK_NO] ASC,
	[WALK_NO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
">
      </stm>
      <stm sql="CREATE TABLE [dbo].[METER_WALKS](
	[STATION_NO] [int] NOT NULL,
	[BOOK_NO] [nvarchar](20) NOT NULL,
	[WALK_NO] [nvarchar](10) NOT NULL,
	[DESCRIBE] [nvarchar](512) NULL,
	[BILLGROUP] [nvarchar](20) NULL,
	[ASSIGNED_TO_HH] [int] NULL,
	[UNUSED] [bit] NULL,
	[DISTANCE_REF] [float] NULL,
	[LAT_MIN] [float] NULL,
	[LAT_MAX] [float] NULL,
	[LNG_MIN] [float] NULL,
	[LNG_MAX] [float] NULL,
	[APPLY_REF] [int] NULL,
	[REF_DATE] [date] NULL,
	[SHAPE] [nchar](30) NULL,
	[PATH] [nchar](1024) NULL,
 CONSTRAINT [PK_ METER_WALKS] PRIMARY KEY CLUSTERED
(
	[STATION_NO] ASC,
	[BOOK_NO] ASC,
	[WALK_NO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]">

      </stm>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.0 "/>
    </stms>
  </mig>
  <mig version="3.1" date="21/05/2016">
    <stms>
      <stm sql="insert into SETTINGS (KEY_WORD,KEY_VALUE) values('COMPANY_NAME','شركة الفيوم لمياة الشرب والصرف الصحي');" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.1 "/>
    </stms>
  </mig>
  <mig version="3.2" date="08/06/2016">
    <stms>
      <stm sql="alter table HH_BCYC ADD CLIENT_VERSION NCHAR(20) NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.2 "/>
    </stms>
  </mig>
  <mig version="3.3" date="09/06/2016">
    <stms>
      <stm sql="update HH_BCYC set IS_READING=0 where (ISCYCLE_COMPLETED_R=0 or ISCYCLE_COMPLETED_R is null) and (BDB_CDB_R!=1 or BDB_CDB_R is null)"/>
      <stm sql="update HH_BCYC set IS_COLLECTION=0 where (ISCYCLE_COMPLETED_C=0 or ISCYCLE_COMPLETED_C is null) and ( BDB_CDB_C!=1 or BDB_CDB_C is null)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.3 "/>
    </stms>
  </mig>
  <mig version="3.4" date="24/07/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_READED_BYHH BIT NULL;"/>
      <stm sql="alter table HH_BCYC ADD NEXT_SEQ INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.4"/>
    </stms>
  </mig>
  <mig version="3.5" date="05/08/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD SYNC_ERROR_C BIT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD SYNC_ERROR_R BIT NULL;"/>
      <STM SQL="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MaxRowsPerHHRequest',500);" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.5"/>
    </stms>
  </mig>

  <mig version="3.6" date="20/08/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OP_BLNCE FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD BASIC_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD TAX_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD INSTALLS_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD DBT_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CRDT_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD AGREEM_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT FLOAT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.6"/>
    </stms>
  </mig>

  <mig version="3.7" date="20/08/2016">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD CLOSE_INDEVICE_BY_C NVARCHAR(50) NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.7"/>
    </stms>
  </mig>

  <mig version="3.8" date="22/08/2016">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD CLOSE_INDEVICE_BY_R NVARCHAR(50) NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.8"/>
    </stms>
  </mig>


  <mig version="3.9" date="4/9/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD INSTALMENT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT1 FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT2 FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT3 FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT4 FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_AMT5 FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD TAKAFUL_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD TANZEEM_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD METER_INSTALLS_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONN_INSTALLS_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD ROUND_AMT FLOAT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=3.9"/>
    </stms>
  </mig>


  <mig version="4.0" date="6/9/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD METER_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONN_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD METER_MAN_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD COMPUTER_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONTRACT_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD GOV_AMT FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD UNI_AMT FLOAT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.0"/>
    </stms>
  </mig>

  <mig version="4.1" date="7/9/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CUR_CHARGES FLOAT NULL;"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CUR_PAYMNTS FLOAT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.1"/>
    </stms>
  </mig>



  <mig version="4.2" date="7/9/2016">
    <stms>
      <stm sql="update statm_deposits set emp_id=(select e.id from emp e where e.full_name=statm_deposits.delivery_man) where emp_id is null"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.2"/>
    </stms>
  </mig>


  <mig version="4.3" date="8/9/2016">
    <stms>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD BILNG_DEPOSITID INT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.3"/>
    </stms>
  </mig>

  <mig version="4.4" date="8/9/2016">
    <stms>
      <stm sql="select payment_no,depositid,empid_c into edams_deposits892016 from hand_mh_st where depositid>0"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.4"/>
    </stms>
  </mig>

  <mig version="4.5" date="14/9/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD BILL_READY BIT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.5"/>
    </stms>
  </mig>

  <mig version="4.6" date="15/9/2016">
    <stms>
      <stm sql="CREATE TABLE  DEPOSIT_DETAILS
	      (
	      DEPOSIT_ID int NOT NULL,
	      BILNG_DEPOSIT_ID int NOT NULL,
	      BILLGROUP NCHAR(10) NULL,
	      BILNG_DATE date NULL,
	      AMOUNT float(53) NULL,
	      COUNT float(53) NULL,
	      OP_BLNCE float(53) NULL,
	      WATER_AMT float(53) NULL,
	      SEWER_AMT float(53) NULL,
	      BASIC_AMT float(53) NULL,
	      TAX_AMT float(53) NULL,
	      INSTALLS_AMT float(53) NULL,
	      DBT_AMT float(53) NULL,
	      CRDT_AMT float(53) NULL,
	      AGREEM_AMT float(53) NULL,
	      OTHER_AMT float(53) NULL,
	      OTHER_AMT1 float(53) NULL,
	      OTHER_AMT2 float(53) NULL,
	      OTHER_AMT3 float(53) NULL,
	      OTHER_AMT4 float(53) NULL,
	      OTHER_AMT5 float(53) NULL,
	      TAKAFUL_AMT float(53) NULL,
	      TANZEEM_AMT float(53) NULL,
	      METER_INSTALLS_AMT float(53) NULL,
	      CONN_INSTALLS_AMT float(53) NULL,
	      INSTALMENT float(53) NULL,
	      ROUND_AMT float(53) NULL,
	      METER_AMT float(53) NULL,
	      CONN_AMT float(53) NULL,
	      METER_MAN_AMT float(53) NULL,
	      COMPUTER_AMT float(53) NULL,
	      CONTRACT_AMT float(53) NULL,
	      GOV_AMT float(53) NULL,
	      UNI_AMT float(53) NULL,
	      CUR_CHARGES float(53) NULL,
	      CUR_PAYMNTS float(53) NULL
	      )"
      />
      <stm sql="ALTER TABLE  DEPOSIT_DETAILS ADD CONSTRAINT
	      PK_DEPOSIT_DETAILS PRIMARY KEY CLUSTERED
	      (
	      DEPOSIT_ID,
	      BILNG_DEPOSIT_ID
	      )"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.6"/>
    </stms>
  </mig>

  <mig version="4.7" date="14/9/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PR_READ2 FLOAT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PR_CONS FLOAT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CALC_TYPE NCHAR(30)  NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PR_READ_TYPE NCHAR(30)  NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.7"/>
    </stms>
  </mig>

  <mig version="4.8" date="24/9/2016">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD GARD BIT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.8"/>
    </stms>
  </mig>


  <mig version="4.9" date="5/10/2016">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD GARD_OK BIT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD GARD BIT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.9"/>
    </stms>
  </mig>

  <mig version="4.91" date="19/10/2016">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD EDAMS_CYCLE_C BIT NULL"/>
      <stm sql="ALTER TABLE HH_BCYC ADD EDAMS_CYCLE_R BIT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=4.91"/>
    </stms>
  </mig>

  <mig version="5.0" date="22/10/2016">
    <stms>
      <stm sql="CREATE TABLE PRINT_LOGS ( PAYMENT_NO nchar(30) NOT NULL, CUSTKEY nchar(30) NOT NULL,CYCLE_ID INT NOT NULL,	PRINT_ID int NOT NULL,	PRINT_DATE datetime NULL,	PRINT_BY nchar(30) NULL,PRINT_TYPE int NULL,LAT float NULL,	LNG float NULL,BILNG_DATE DATETIME NULL	)"/>
      <stm sql="ALTER TABLE PRINT_LOGS ADD CONSTRAINT	PK_PRINT_LOG PRIMARY KEY CLUSTERED 	(	CUSTKEY,CYCLE_ID,	PRINT_ID	)"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PAY_PRINT_COUNT INT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PRV_PRINT_COUNT INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.0"/>
    </stms>
  </mig>

  <mig version="5.1" date="23/10/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PATCH_NO INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.1"/>
    </stms>
  </mig>
  <mig version="5.2" date="24/10/2016">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_HAFZA_PRINTED BIT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD HAFZA_PRINT_DATE DATETIME NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD INSTALMENT_RATIO nchar(10) NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMPTION_TYPE nchar(50) NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD READ_TYPE INT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD S_METER_TYPE VARCHAR(30)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.2"/>
    </stms>
  </mig>
  <mig version="5.3" date="28/10/2016">
    <stms>
      <stm sql="ALTER TABLE  ARC_HAND_MH_ST ADD CONSTRAINT PK_ARC_HAND_MH_ST PRIMARY KEY CLUSTERED (CUSTKEY,CYCLE_ID) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
      <stm sql="ALTER TABLE  ARC_HAND_MH_ST SET (LOCK_ESCALATION = TABLE)"/>
      <stm sql="create view VWHAND_MH_ST AS  SELECT 0 IS_ARHIVED, A.* FROM HAND_MH_ST A UNION SELECT  1 IS_ARHIVED,B.* FROM ARC_HAND_MH_ST B;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.3"/>
    </stms>
  </mig>
  <mig version="5.4" date="31/10/2016">
    <stms>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.4"/>
    </stms>
  </mig>
  <mig version="5.5" date="31/10/2016">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD S_CR_READING FLOAT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD S_PR_READING FLOAT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD S_CONSUMP FLOAT NULL "/>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('SHOULD_MHH_EMPTY',1)" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.5"/>
    </stms>
  </mig>

  <mig version="5.6" date="6/11/2016">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD HAFZA_PRINT_COUNT INT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.6"/>
    </stms>
  </mig>

  <mig version="5.7" date="7/11/2016">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD BUILDING_NO INT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD GROUP_CODE INT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD FILE_NO INT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.7"/>
    </stms>
  </mig>

  <mig version="5.8" date="16/11/2016">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD PR_ACCES_CODE NCHAR(10) NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD ACCES_CODE NCHAR(10) NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD PR_OP_STATUS INT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD NO_DIALS INT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD CLOCK_OVER INT NULL "/>
      <stm sql="alter table HAND_MH_ST alter column op_status int null " />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('TRANSFEER_METER_CONDITION',0)" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('ALLOW_CHANGE_METER_OP_STATUS',1)" />
      <stm sql="UPDATE HAND_MH_ST SET ACCES_CODE='0'+READING_NOTE;"/>
      <stm sql="UPDATE ARC_HAND_MH_ST SET ACCES_CODE='0'+READING_NOTE;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.8"/>
    </stms>
  </mig>

  <mig version="5.9" date="4/12/2016">
    <stms>
      <stm sql="ALTER TABLE  USERS ADD IS_CASHIER BIT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD IS_BY_CASHIER BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=5.9"/>
    </stms>
  </mig>

  <mig version="6.0" date="5/12/2016">
    <stms>
      <stm sql="ALTER TABLE  USERS ADD CASHIER_ID INT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=6.0"/>
    </stms>
  </mig>

  <mig version="6.1" date="1/1/2017">
    <stms>
      <stm sql="ALTER TABLE  STATM_DEPOSITS ADD BANK_RECPT_NO NCHAR(50) NULL "/>
      <stm sql="ALTER TABLE  STATM_DEPOSITS ADD BANK_ACC_NO NCHAR(50) NULL "/>
      <stm sql="ALTER TABLE  STATM_DEPOSITS ADD BANK_NAME NCHAR(50) NULL "/>
      <stm sql="ALTER TABLE  STATM_DEPOSITS ADD BANK_POST_DATE DATETIME NULL "/>
      <stm sql="insert into settings (KEY_WORD,KEY_VALUE) values('EnableBanking',0);"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=6.1"/>
    </stms>
  </mig>

  <mig version="6.2" date="1/1/2017">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD SUPER_LOCK_C BIT NULL "/>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD SUPER_LOCK_R BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=6.2"/>
    </stms>
  </mig>

  <mig version="6.3" date="1/1/2017">
    <stms>
      <stm sql="ALTER TABLE  USERS ADD IS_DESK_CAHIER BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=6.3"/>
    </stms>
  </mig>

  <mig version="7" date="4/1/2017">
    <stms>
      <stm sql="CREATE TABLE  PATCHES
	      (
	      ID bigint NOT NULL IDENTITY (1, 1),
	      DEVICE_ID nchar(30) NULL,
	      BILLGROUP nchar(10) NULL,
	      BOOK_NO nchar(10) NULL,
	      WALK_NO nchar(10) NULL,
	      STAM_DATE datetime NULL,
	      EMP_ID int NULL,
	      STATION_NO int NULL,
	      CLIENT_VERSION nchar(10) NULL
	      )"/>
      <stm sql="ALTER TABLE  PATCHES ADD CONSTRAINT
	    PK_PATCHES PRIMARY KEY CLUSTERED
	    (
	    ID
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
      <stm sql="ALTER TABLE  PATCHES SET (LOCK_ESCALATION = TABLE)"/>
      <stm sql="CREATE TABLE  PATCH_DETAILS
	      (
	      ID bigint NOT NULL,
	      CUSTKEY nchar(30) NOT NULL,
	      DELIVERY_ST int NULL,
	      CR_READING int NULL,
	      MHH_NOTE int NULL,
	      STM_NOTE int NULL,
	      COLLECTION_DATE datetime NULL,
	      READING_DATE datetime NULL,
	      NO_UNITS int NULL,
	      C_TYPE nchar(10) NULL,
	      SEWER bit NULL,
	      IS_REF bit NULL,
	      LAT_C float(53) NULL,
	      LAT_R float(53) NULL,
	      LNG_C float(53) NULL,
	      LNG_R float(53) NULL,
	      GPS_SOURCE_C int NULL,
	      GPS_SOURCE_R int NULL,
	      DISTANCE_R float(53) NULL,
	      SYNC_ST int NULL,
	      ACCURECY_R float(53) NULL,
	      ACCURECY_C float(53) NULL
	      )  ON [PRIMARY]" />
      <stm sql="ALTER TABLE  PATCH_DETAILS ADD CONSTRAINT
	      PK_dboPATCH_DETAILS PRIMARY KEY CLUSTERED
	      (
	      ID,
	      CUSTKEY
	      ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" />"
      <stm sql="ALTER TABLE  PATCH_DETAILS ADD CONSTRAINT
	        FK_PATCH_DETAILS FOREIGN KEY
	        (
	        ID
	        ) REFERENCES  PATCHES
	        (
	        ID
	        ) ON UPDATE  NO ACTION
	         ON DELETE  NO ACTION " />
      <stm sql="ALTER TABLE  PATCH_DETAILS SET (LOCK_ESCALATION = TABLE)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7"/>
    </stms>
  </mig>

  <mig version="7.1" date="1/1/2017">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD IS_HH_NOTIFIED BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.1"/>
    </stms>
  </mig>

  <mig version="7.2" date="1/1/2017">
    <stms>
      <stm sql="ALTER TABLE  USERS ADD EDAMS_CLEAR_READINGS BIT NULL "/>
      <stm sql="ALTER TABLE  USERS ADD EDAMS_RECALC BIT NULL "/>
      <stm sql="ALTER TABLE  USERS ADD EDAMS_CS BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.2"/>
    </stms>
  </mig>

  <mig version="7.3" date="9/2/2017">
    <stms>
      <stm sql="CREATE TABLE [dbo].[EXT_METER_EDGS](
	      [ID] [bigint] NOT NULL,
	      [NAME] [nchar](100) NULL,
	      [ADDRESS] [nchar](100) NULL,
	      [CUSTKEY] [nchar](30) NULL,
	      [STAMP_DATE] [date] NULL,
	      [REMOTE_ADDRESS] [nchar](30) NULL,
	      [TEL] [nchar](30) NULL,
        [CR_READING] [int] NULL,
        [CR_DATE] [date] NULL,
	      [EMAIL] [nchar](100) NULL,
	      [METER_STATUS] [nchar](30) NULL,
       CONSTRAINT [PK_EXT_METER_EDGS] PRIMARY KEY CLUSTERED
      (
	      [ID] ASC
      )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
      ) ON [PRIMARY]" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.3"/>
    </stms>
  </mig>

  <mig version="7.4" date="2/4/2017">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MUST_GARD',1)" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.4"/>
    </stms>
  </mig>

  <mig version="7.5" date="2/4/2017">
    <stms>
      <stm sql="ALTER TABLE  HAND_MH_ST ADD IS_HQ_NOTIFIED_C BIT NULL" />
      <stm sql="ALTER TABLE  HAND_MH_ST ADD IS_HQ_NOTIFIED_R BIT NULL" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.5"/>
    </stms>
  </mig>

  <mig version="7.6" date="2/4/2017">
    <stms>
      <stm sql="  update HAND_MH_ST set STATION_NO=(select STATION_No from BILLING_GROUPS b where b.GROUP_ID=HAND_MH_ST.BILLGROUP)
" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.6"/>
    </stms>
  </mig>

  <mig version="7.7" date="10/4/2017">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD STATM_NO INT NULL" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.7"/>
    </stms>
  </mig>


  <mig version="7.8" date="30/4/2017">
    <stms>
      <stm bypass="true" sql="ALTER TABLE HAND_MH_ST ADD IS_HQ_NOTIFIED BIT NULL" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.8"/>
    </stms>
  </mig>



  <mig version="7.9" date="10/6/2017">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONN_AVRG_CONSUMP FLOAT NULL" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD MODIFIED_AVRG_CONSUMP FLOAT NULL" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD PR_AVRG_CONS FLOAT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=7.9"/>
    </stms>
  </mig>


  <mig version="8" date="17/6/2017">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD ERROR_MESSAGE NVARCHAR(256) NULL" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.0"/>
    </stms>
  </mig>


  <mig version="8.1" date="06/9/2017">
    <stms>
      <stm sql="exec sp_rename 'dbo.ARC_HAND_MH_ST', 'ARC_HAND_MH_ST_92017'" />
      <stm sql="SELECT * INTO ARC_HAND_MH_ST FROM HAND_MH_ST WHERE 1=0"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.1"/>
    </stms>
  </mig>

  <mig version="8.2" date="06/9/2017">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PREV_METER_REF NCHAR(30) NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_METER_MODIFY BIT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.2"/>
    </stms>
  </mig>

  <mig version="8.3" date="13/10/2017">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_SAKANY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_KHADAMY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_TOGARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_SENA3Y FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_SEAHY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_ISTSMARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_BDOON FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_RAYY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_ENSHAAT FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD WATER_AMT_OKHRAA FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_SAKANY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_KHADAMY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_TOGARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_SENA3Y FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_SEAHY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_ISTSMARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_BDOON FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_RAYY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_ENSHAAT FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SEWER_AMT_OKHRAA FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_SAKANY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_KHADAMY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_TOGARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_SENA3Y FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_SEAHY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_ISTSMARY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_BDOON FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_RAYY FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_ENSHAAT FLOAT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD CONSUMP_OKHRAA FLOAT NULL;" />
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.3"/>
    </stms>
  </mig>

  <mig version="8.4" date="19/11/2017">
    <stms>
      <stm sql="insert into SETTINGS (KEY_WORD,KEY_VALUE) VALUES('IS_HQ',0);" />
      <stm sql="ALTER TABLE HH_BCYC ADD SECTOR_CODE INT NULL;" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD SECTOR_CODE INT NULL;" />
      <stm sql="ALTER TABLE STATIONS ADD SECTOR_CODE INT NULL;" />
      <stm sql="ALTER TABLE STATIONS ADD SECTOR_NAME NVARCHAR(100) NULL;" />
      <stm sql="alter table HAND_MH_ST ADD IS_ACC_CONSUMP BIT NULL "/>
      <stm sql="alter table HAND_MH_ST ADD ACC_DATE DATE NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.4"/>
    </stms>
  </mig>

  <mig version="8.5" date="25/11/2017">
    <stms>
      >
      <stm sql="alter table USERS ADD ALLOW_GARD BIT NULL "/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.5"/>
    </stms>
  </mig>

  <mig version="8.6" date="26/11/2017">
    <stms>
      <stm sql="ALTER TABLE dbo.CUSTOMER_BOOKS DROP CONSTRAINT [PK_dbo.CUSTOMER_BOOKS]"/>
      <stm sql="ALTER TABLE dbo.CUSTOMER_BOOKS ADD CONSTRAINT [PK_dbo.CUSTOMER_BOOKS] PRIMARY KEY (STATION_NO,BILLGROUP,CODE)"/>
      <stm sql="ALTER TABLE dbo.METER_BOOKS DROP CONSTRAINT [PK_dbo.METER_BOOKS]"/>
      <stm sql="ALTER TABLE dbo.METER_BOOKS ADD CONSTRAINT [PK_dbo.METER_BOOKS] PRIMARY KEY (STATION_NO,BILLGROUP,CODE)"/>

      <stm sql="ALTER TABLE dbo.CUSTOMER_WALKS DROP CONSTRAINT [PK_dbo.CUSTOMER_WALKS]"/>
      <stm sql="ALTER TABLE dbo.CUSTOMER_WALKS ADD CONSTRAINT [PK_dbo.CUSTOMER_WALKS] PRIMARY KEY (STATION_NO,BILLGROUP,BOOK_NO,WALK_NO)"/>
      <stm sql="ALTER TABLE dbo.METER_WALKS DROP CONSTRAINT [PK_dbo.METER_WALKS]"/>
      <stm sql="ALTER TABLE dbo.METER_WALKS ADD CONSTRAINT [PK_dbo.METER_WALKS] PRIMARY KEY (STATION_NO,BILLGROUP,BOOK_NO,WALK_NO)"/>

      <stm sql="ALTER TABLE dbo.HH_BCYC DROP CONSTRAINT PK_HH_BCYC"/>
      <stm sql="ALTER TABLE dbo.HH_BCYC ADD CONSTRAINT PK_HH_BCYC PRIMARY KEY (STATION_NO,BILLGROUP,BOOK_NO,WALK_NO,CYCLE_ID)"/>
      <stm sql="ALTER TABLE dbo.HH_BCYC ADD CONSTRAINT PK_HH_BCYC PRIMARY KEY (STATION_NO,BILLGROUP,BOOK_NO,WALK_NO,CYCLE_ID)"/>
      <stm sql="ALTER TABLE dbo.EMP DROP CONSTRAINT [PK_dbo.EMP]"/>
      <stm sql="ALTER TABLE dbo.EMP ADD CONSTRAINT PK_EMP PRIMARY KEY (BRANCH_ID,ID)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.6"/>
    </stms>
  </mig>

  <mig version="8.7" date="28/11/2017">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('BARCODE_LENGTH',12)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.7"/>
    </stms>
  </mig>

  <mig version="8.8" date="28/11/2017">
    <stms>
      <stm sql="alter table deposit_details add RECEIPT_NO NVARCHAR(60)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.8"/>
    </stms>
  </mig>

  <mig version="8.9" date="20/12/2017">
    <stms>
      <stm sql="alter table hand_mh_st add MARKED BIT"/>
      <stm sql="alter table hand_mh_st add MARKE_NOTE NVARCHAR(50)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=8.9"/>
    </stms>
  </mig>

  <mig version="9.0" date="23/12/2017">
    <stms>
      <stm sql="alter table USERS add RESEND_COLLECTION BIT"/>
      <stm sql="alter table USERS add RESEND_READING BIT"/>
      <stm sql="alter table USERS add CLOSE_COLLECTION BIT"/>
      <stm sql="alter table USERS add CLOSE_READING BIT"/>
      <stm sql="UPDATE USERS SET CLOSE_READING =1 WHERE READING_ADMIN=1"/>
      <stm sql="UPDATE USERS SET CLOSE_COLLECTION =1 WHERE COLLECTION_ADMIN=1"/>
      <stm sql="UPDATE USERS SET RESEND_READING =1 WHERE READING_ADMIN=1"/>
      <stm sql="UPDATE USERS SET RESEND_COLLECTION =1 WHERE COLLECTION_ADMIN=1"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.0"/>
    </stms>
  </mig>

  <mig version="9.1" date="23/12/2017">
    <stms>
      <stm sql="alter table HAND_MH_ST add NEGATIVE_FLAGE int"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.1"/>
    </stms>
  </mig>

  <mig version="9.2" date="26/12/2017">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('REALTIME_COLLECTION_POSTING',0)"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD  DEDUCATIONS_AMOUNT FLOAT;"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD  CHQ_NO NCHAR(50);"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD  CHQ_BANK NCHAR(50);"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.2"/>
    </stms>
  </mig>

  <mig version="9.3" date="1/1/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD  IS_GARD_POST BIT NULL;"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.3"/>
    </stms>
  </mig>

  <mig version="9.4" date="11/1/2018">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('IGNORE_GARD_POST',0)"/>
      <stm sql="UPDATE SETTINGS set KEY_VALUE=1 where KEY_WORD='REALTIME_COLLECTION_POSTING'"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.4"/>
    </stms>
  </mig>

  <mig version="9.5" date="11/1/2018">
    <stms>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD IS_POSTED BIT NULL"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD BILNG_DEPOSIT_ID BIGINT NULL"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD POST_DATE DATETIME NULL"/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD STATION_NO INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.5"/>
    </stms>
  </mig>


  <mig version="9.6" date="4/3/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD DISCOUNT FLOAT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD DISCOUNT_DOCUMENT_NO NVARCHAR(50) NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.6"/>
    </stms>
  </mig>

  <mig version="9.7" date="4/3/2018">
    <stms>
      <stm sql="ALTER TABLE USERS ADD COLLECTION_DISCOUNT BIT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.7"/>
    </stms>
  </mig>

  <mig version="9.8" date="12/3/2018">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MASGATE_API_KEY',0)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MASGATE_SERVER',0)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MASGATE_PROJECT_TAG',0)"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PORTAL_CR_READING INT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PORTAL_CR_DATE DATE NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.8"/>
    </stms>
  </mig>

  <mig version="9.9" date="20/3/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD GARD_STAMPDATE datetime NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD GARD_USER VARCHAR(60) NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=9.9"/>
    </stms>
  </mig>


  <mig version="10.0" date="07/4/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_BY_CHEQUE BIT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CHEQUE_NO VARCHAR(60) NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CHEQUE_BANK VARCHAR(60) NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CHEQUE_DATE DATETIME NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD IS_MULTI_CTYPES BIT NULL"/>
      <stm sql="CREATE TABLE BILL_CTYPES (CUSTKEY VARCHAR(30),CYCLE_ID INT,C_TYPE VARCHAR(30),PAYMENT_NO VARCHAR(50),WATER_AMT FLOAT,SEWER_AMT FLOAT,OTHER_AMT FLOAT,CONSTRAINT PK_BILL_CTYPES PRIMARY KEY (CUSTKEY,CYCLE_ID,C_TYPE))" />
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('DISTRIBUTE_STATMENT_CTYPES',0)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.0"/>
    </stms>
  </mig>

  <mig version="10.1" date="17/4/2018">
    <stms>
      <stm skip="1" sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('UA_ADRESS_MAX_SIZE',30)"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.1"/>
    </stms>
  </mig>

  <mig version="10.2" date="23/4/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD OTHER_CUR_AMT float NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD CLEAN_AMT float NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD COLLECTION_AMT float NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PARTIAL_CUR_AMT float NULL"/>

      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.2"/>
    </stms>
  </mig>


  <mig version="10.3" date="29/5/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD AMOUNT_COLLECTED float NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.3"/>
    </stms>
  </mig>


  <mig version="10.4" date="30/5/2018">
    <stms>
      <stm sql="
  CREATE TABLE dbo.RECEIPTS
  (
    RECEIPT_NO nchar(15) NOT NULL,
    CUSTKEY nchar(60) NOT NULL,
    PAYMENT_NO nchar(60) NULL,
    AMOUNT float(53) NOT NULL,
    COLLECTION_DATE datetime NULL,
    COLLECTION_TYPE int NULL,
    COLLECTION_METHOD int NULL,
    PAYMENT_METHOD int NULL,
    CHEQ_NO nchar(30) NULL,
    CHEQ_BANK nchar(60) NULL,
    DISCOUNT_AMOUNT float(53) NULL,
    DISCOUNT_DOCUMENT_NO nchar(30) NULL,
    DOCUMENT_NO nchar(30) NULL
  )  ON [PRIMARY]"/>
      <stm sql="ALTER TABLE dbo.RECEIPTS ADD CONSTRAINT	PK_RECEIPT PRIMARY KEY CLUSTERED (RECEIPT_NO) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD BILL_AMOUNT float NULL"/>
      <stm sql="UPDATE HAND_MH_ST SET BILL_AMOUNT=CL_BLNCE WHERE BILL_AMOUNT IS NULL"/>
      <stm sql="ALTER TABLE SETTINGS ADD DESCRIPTION NCHAR(255)"/>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE,DESCRIPTION) VALUES('BILLING_ISSUE_TYPE',0,'تحدد نوع الاصدار تراكمي او فردي -- 0 تراكمي و1 فردي ')" />
      <stm sql="ALTER TABLE dbo.HAND_MH_ST DROP COLUMN WATER_AMT_SAKANY, WATER_AMT_KHADAMY, WATER_AMT_TOGARY, WATER_AMT_SENA3Y, WATER_AMT_SEAHY, WATER_AMT_ISTSMARY, WATER_AMT_BDOON, WATER_AMT_RAYY, WATER_AMT_ENSHAAT, WATER_AMT_OKHRAA, SEWER_AMT_SAKANY, SEWER_AMT_KHADAMY, SEWER_AMT_TOGARY, SEWER_AMT_SENA3Y, SEWER_AMT_SEAHY, SEWER_AMT_ISTSMARY, SEWER_AMT_BDOON, SEWER_AMT_RAYY, SEWER_AMT_ENSHAAT, SEWER_AMT_OKHRAA, CONSUMP_SAKANY, CONSUMP_KHADAMY, CONSUMP_TOGARY, CONSUMP_SENA3Y, CONSUMP_SEAHY, CONSUMP_ISTSMARY, CONSUMP_BDOON, CONSUMP_RAYY, CONSUMP_ENSHAAT, CONSUMP_OKHRAA"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.4"/>
    </stms>
  </mig>

  <mig version="10.5" date="30/5/2018">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD CANCELLED BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD CANCELLED_BY BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD CANCELLED_DATE BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD CANCELLED_REASON BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD LAT FLOAT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD LNG FLOAT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD ACCURECY FLOAT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD DEVICE_ID NCHAR(60) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD STAMP_USER NCHAR(30) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD STAMP_DATE DATETIME NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD DEPOSIT_ID BIGINT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.5"/>
    </stms>
  </mig>

  <mig version="10.6" date="30/5/2018">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD IS_POSTED BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD POST_DATE DATETIME NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD POST_BY NCHAR(60) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD TRANS_NO INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.6"/>
    </stms>
  </mig>

  <mig version="10.7" date="31/5/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD DUE_AMOUNT FLOAT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.7"/>
    </stms>
  </mig>

  <mig version="10.8" date="31/5/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD ISSUE_ST INT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD ISSUE_ST_ID INT NULL"/>
      <stm sql="UPDATE SYSTEM SET DATABASE_VERSION=10.8"/>
    </stms>
  </mig>
  <mig version="10.9" date="31/5/2018">
    <note>no need for this point to update system because it will did automatically</note>
    <stms>
    </stms>
  </mig>
  <mig version="11.0" date="02/6/2018">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD CYCLE_ID INT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD BILNG_DATE DATE NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD INS_CYCLE_ID INT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD INS_BILNG_DATE DATE NULL"/>
    </stms>
  </mig>
  <mig version="11.1" date="02/6/2018">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD IS_HAFZA_PRINTED BIT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD EMP_ID INT NULL"/>
    </stms>
  </mig>

  <mig version="11.2" date="03/6/2018">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD STATION_NO INT NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD BILLGROUP NCHAR(10) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD BOOK_NO NCHAR(10) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD WALK_NO NCHAR(10) NULL"/>
      <stm sql="ALTER TABLE RECEIPTS ADD STATM_NO INT NULL"/>
    </stms>
  </mig>


  <mig version="11.3" date="06/06/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD ISSUE_TYPE INT NULL"/>
    </stms>
  </mig>

  <mig version="11.4" date="06/06/2018">
    <stms>
      <stm sql="ALTER TABLE HH_BCYC ADD IS_BILL_PREPEARED BIT NULL"/>
    </stms>
  </mig>
  <mig version="11.5" date="06/06/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD PRINT_READY BIT NULL"/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD BILL_ADJ_AMOUNT FLOAT NULL"/>
    </stms>
  </mig>
  <mig version="11.6" date="05/07/2018">
    <stms>
      <stm sql="alter table RECEIPTS alter column CANCELLED_BY nvarchar(60)"/>
      <stm sql="alter table RECEIPTS alter column CANCELLED_DATE datetime"/>
      <stm sql="alter table RECEIPTS alter column CANCELLED_REASON nvarchar(260)"/>
    </stms>
  </mig>
  <mig version="11.7" date="16/07/2018">
    <stms>
      <stm sql="alter table RECEIPTS add CANCELLED_AMOUNT FLOAT NULL"/>
    </stms>
  </mig>
  <mig version="11.8" date="16/07/2018">
    <stms>
      <stm sql="alter table HAND_MH_ST add IS_REUPDATED BIT NULL"/>
    </stms>
  </mig>
  <mig version="11.9" date="23/07/2018">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('SURNAME_MAX_SIZE',30)"/>
    </stms>
  </mig>
  <mig version="12.0" date="28/07/2018">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD INSTALMENT_DATE DATETIME NULL"/>
    </stms>
  </mig>
  <mig version="12.1" date="31/07/2018">
    <stms>
      <stm skip="1" sql="ALTER TABLE dbo.DATA_COLLECTION	DROP CONSTRAINT PK_DataCollection" />
      <stm skip="1" sql="ALTER TABLE dbo.DATA_COLLECTION DROP COLUMN ID"  />
      <stm skip="1" sql="ALTER TABLE dbo.DATA_COLLECTION ADD CONSTRAINT
	              PK_DATA_COLLECTION PRIMARY KEY CLUSTERED
	              (
	              BRANCH_ID,
	              CUSTKEY,
	              CYCLE_ID
	              ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
    </stms>
  </mig>
  <mig version="12.2" date="31/07/2018">
    <stms>
      <stm skip="1" sql="ALTER TABLE dbo.HAND_MH_ST	add STOP_ISSUE bit null" />
    </stms>
  </mig>
  <mig version="12.3" date="31/07/2018">
    <stms>
      <stm  sql="alter table users ALTER COLUMN password nvarchar(60) NOT NULL" />
    </stms>
  </mig>
  <mig version="12.4" date="07/09/2018">
    <stms>
      <stm sql="CREATE view vw_health as
       select HAND_MH_ST.BILLGROUP,HAND_MH_ST.CUSTKEY,HAND_MH_ST.BILNG_DATE, HAND_MH_ST.cl_blnce,(select sum(h2.DUE_AMOUNT) from HAND_MH_ST h2 where h2.CUSTKEY=HAND_MH_ST.CUSTKEY and h2.DUE_AMOUNT>0 and
          (h2.ISSUE_ST=0 or h2.ISSUE_ST is null )) TOTAL_DUE_AMOUNT,
          ( select sum(r.amount) from receipts r where r.CUSTKEY=HAND_MH_ST.CUSTKEY and r.INS_CYCLE_ID=HAND_MH_ST.CYCLE_ID and (r.CANCELLED=0 or r.CANCELLED is null ) ) AMOUNT_COLLECTED
           from HAND_MH_ST
          where
          BILNG_DATE=(select max(hh_bcyc.BILNG_DATE ) from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP)
          and
          delivery_st=0
          and
          abs(hand_mh_st.cl_blnce -(
          select sum(h2.DUE_AMOUNT) from HAND_MH_ST h2 where h2.IS_COLLECTION_ROW=1 and h2.CUSTKEY=HAND_MH_ST.CUSTKEY and h2.DUE_AMOUNT>0 and
          (h2.ISSUE_ST=0 or h2.ISSUE_ST is null )
          )
          -
          ( select sum(r.amount) from receipts r where r.CUSTKEY=HAND_MH_ST.CUSTKEY and r.INS_CYCLE_ID=HAND_MH_ST.CYCLE_ID and (r.CANCELLED=0 or r.CANCELLED is null ) )
          )>0.1" />
    </stms>
  </mig>
  <mig version="12.5" date="10/10/2018">
    <stms>
      <stm sql="create view VW_STATMS as select h.*,b.EMPID_C as EMP_ID,b.DEVICEID_C as DEVICE_ID from hh_bcyc b,HAND_MH_ST h
          where b.STATION_NO=h.STATION_NO
          and h.BILLGROUP=b.BILLGROUP
          and h.BOOK_NO_C=b.BOOK_NO
          and h.WALK_NO_C=b.WALK_NO
          and h.CYCLE_ID=b.CYCLE_ID
          and h.IS_COLLECTION_ROW=1" />
      <stm sql="create view VW_READINGS as select h.*,b.EMPID_R as EMP_ID,b.DEVICEID_R as DEVICE_ID from hh_bcyc b,HAND_MH_ST h
          where b.STATION_NO=h.STATION_NO
          and h.BILLGROUP=b.BILLGROUP
          and h.BOOK_NO_R=b.BOOK_NO
          and h.WALK_NO_R=b.WALK_NO
          and h.CYCLE_ID=b.CYCLE_ID
          and h.IS_READING_ROW=1" />
    </stms>
  </mig>
  <mig version="12.6" date="25/10/2018">
    <stms>
      <stm sql="alter table RECEIPTS ADD COLLECTION_ID int null " />
    </stms>
  </mig>
  <mig version="12.7" date="27/10/2018">
    <stms>
      <stm sql="alter table PRINT_LOGS ADD IS_CANCELED bit null " />
      <stm sql="alter table PRINT_LOGS ADD CANCEL_DATE datetime null " />
      <stm sql="alter table PRINT_LOGS ADD CANCEL_BY nchar(100) null " />
      <stm sql="alter table PRINT_LOGS ADD CANCEL_AMOUNT float null " />
      <stm sql="alter table HAND_MH_ST ADD MIN_CHARGE float null " />
    </stms>
  </mig>
  <mig version="12.8" date="27/10/2018">
    <stms>
      <stm sql="drop view VW_STATMS" />
      <stm sql="create view VW_STATMS as select h.*,b.EMPID_C as EMP_ID,b.DEVICEID_C as DEVICE_ID,b.ISCYCLE_COMPLETED_C as ISCYCLE_COMPLETED,
b.ISCLOSED_INDEVICE_C as ISCLOSED_INDEVICE from hh_bcyc b,HAND_MH_ST h
          where b.STATION_NO=h.STATION_NO
          and h.BILLGROUP=b.BILLGROUP
          and h.BOOK_NO_C=b.BOOK_NO
          and h.WALK_NO_C=b.WALK_NO
          and h.CYCLE_ID=b.CYCLE_ID
          and h.IS_COLLECTION_ROW=1" />
      <stm sql="drop view VW_READINGS" />
      <stm sql="create view VW_READINGS as select h.*,b.EMPID_R as EMP_ID,b.DEVICEID_R as DEVICE_ID,b.ISCYCLE_COMPLETED_R as ISCYCLE_COMPLETED,
b.ISCLOSED_INDEVICE_R as ISCLOSED_INDEVICE from hh_bcyc b,HAND_MH_ST h
          where b.STATION_NO=h.STATION_NO
          and h.BILLGROUP=b.BILLGROUP
          and h.BOOK_NO_R=b.BOOK_NO
          and h.WALK_NO_R=b.WALK_NO
          and h.CYCLE_ID=b.CYCLE_ID
          and h.IS_READING_ROW=1" />
    </stms>
  </mig>
  <mig version="12.9" date="30/10/2018">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MIN_CHARGE_VALUE',10)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MIN_CHARGE_RATIO',0.25)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MIN_CHARGE_OP','AND')"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MAX_CHARGE',999999)"/>
    </stms>
  </mig>
  <mig version="13.0" date="31/10/2018">
    <stms>
      <stm skip="1" sql="CREATE NONCLUSTERED INDEX ix_hand_readings ON dbo.HAND_MH_ST
        (
        STATION_NO,
        BILLGROUP,
        BOOK_NO_R,
        WALK_NO_R,
        CYCLE_ID
        ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
    </stms>
  </mig>

  <mig version="13.1" date="31/10/2018">
    <stms>
      <stm sql="update HAND_MH_ST set reading_date=stamp_date where reading_date is null and reading_note >0"/>
      <stm sql="update HAND_MH_ST set reading_date=CANCEL_DATE_R where reading_date is null and reading_note >0"/>
      <stm sql="update HAND_MH_ST set reading_date=CANCEL_DATE_R where reading_date is null"/>
    </stms>
  </mig>

  <mig version="13.2" date="23/11/2018">
    <stms>
      <stm sql="alter table LU_ACCESS_CODE ADD LOCK_NOTE bit null " />
    </stms>
  </mig>

  <mig version="13.3" date="24/11/2018">
    <stms>
      <stm sql="alter table USERS ADD REFRESH_BILLS_DATA bit null " />
      <stm sql="alter table USERS ADD CALCULATE_DUE_AMOUNT bit null " />
      <stm sql="alter table USERS ADD COLLECT_BILL_SINGL_UINT bit null " />
      <stm sql="alter table USERS ADD PRINT_PAYMENT_REQUEST bit null " />
      <stm sql="alter table USERS ADD PARTIAL_COLLECTION bit null " />
      <stm sql="alter table USERS ADD ALONE_PANEL bit null " />
    </stms>
  </mig>

  <mig version="13.4" date="01/12/2018">
    <stms>
      <stm skip="1" sql=" CREATE UNIQUE NONCLUSTERED INDEX IX_RECEIPTS ON dbo.RECEIPTS
        (
        CUSTKEY,
        PAYMENT_NO,
        COLLECTION_ID
        )"/>
    </stms>
  </mig>

  <mig version="13.5" date="02/12/2018">
    <stms>
      <stm sql="alter table EMP ADD ORIGINAL_STATION nchar(100) null " />
    </stms>
  </mig>

  <mig version="13.6" date="04/12/2018">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('RECEIPT_CHARGE1',0)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('RECEIPT_CHARGE2',0)"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('RECEIPT_CHARGE3',0)"/>
      <stm sql="alter table RECEIPTS ADD RECEIPT_CHARGE1 FLOAT null" />
      <stm sql="alter table RECEIPTS ADD RECEIPT_CHARGE2 FLOAT null" />
      <stm sql="alter table RECEIPTS ADD RECEIPT_CHARGE3 FLOAT null" />
      <stm sql="alter table USERS ADD REFRESH_CUSTOMER_BILLS bit null " />
    </stms>
  </mig>

  <mig version="13.7" date="04/12/2018">
    <stms>
      <stm sql="alter table RECEIPTS ADD HAFZA_PRINT_COUNT int null" />
      <stm sql="alter table RECEIPTS ADD HAFZA_PRINT_DATE datetime null" />
    </stms>
  </mig>

  <mig version="13.8" date="06/12/2018">
    <stms>
      <stm skip="1" sql="alter table RECEIPTS add COLLECTION_ID_t bigint;" />
      <stm skip="1" sql="alter table RECEIPTS add tmp_id bigint;" />
      <stm sql="update RECEIPTS set COLLECTION_ID_t=COLLECTION_ID,tmp_id=COLLECTION_ID" />
      <stm skip="1" sql="DROP INDEX IX_RECEIPTS ON dbo.RECEIPTS ;" />
      <stm sql="alter table RECEIPTS drop column COLLECTION_ID" />
      <stm sql="EXEC sp_rename 'RECEIPTS.COLLECTION_ID_t', 'COLLECTION_ID', 'COLUMN'" />
    </stms>
  </mig>

  <mig version="13.9" date="06/12/2018">
    <stms>
      <stm sql="alter table STATM_DEPOSITS add FROM_BILNG bit;" />
    </stms>
  </mig>

  <mig version="14.0" date="06/12/2018">
    <stms>
      <stm  skip="1" sql="alter table statm_deposits add deposit_id_t bigint" />
      <stm  skip="1" sql="alter table statm_deposits add deposit_id_t2 bigint" />
      <stm skip="1" sql="update statm_deposits set deposit_id_t=deposit_id" />
      <stm skip="1" sql="update statm_deposits set deposit_id_t2=deposit_id" />
      <stm skip="1" sql="ALTER TABLE [dbo].[STATM_DEPOSITS] DROP CONSTRAINT [PK_dbo.STATM_DEPOSITS]" />
      <stm skip="1" sql="alter table statm_deposits drop column deposit_id" />
      <stm skip="1" sql="exec sp_rename 'STATM_DEPOSITS.deposit_id_t', 'DEPOSIT_ID'" />
      <stm skip="1" sql="ALTER TABLE statm_deposits alter column DEPOSIT_ID BIGINT NOT NULL" />
      <stm skip="1" sql="ALTER TABLE statm_deposits ADD CONSTRAINT PK_STATM_DEPOSITS PRIMARY KEY  (DEPOSIT_ID)" />
    </stms>
  </mig>

  <mig version="14.1" date="8/12/2018">
    <stms>
      <stm  sql="update HAND_MH_ST set EMPID_C=(select HH_BCYC.EMPID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1 and EMPID_C is null" />
      <stm  sql="update HAND_MH_ST set COLLECTION_DEVICEID=(select HH_BCYC.DEVICEID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1 and COLLECTION_DEVICEID is null" />
    </stms>
  </mig>
  <mig version="14.2" date="9/12/2018">
    <stms>
      <stm sql="create view VW_RECEIPTS_SUMMARY as
select STATION_NO, CUSTKEY,CYCLE_ID,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
			ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
			ISNULL(min(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
			ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
			ISNULL(min(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
 from receipts r group by STATION_NO, CUSTKEY,CYCLE_ID" />

      <stm  sql="CREATE VIEW VW_COLLECTION AS select v.EMPID_C OWNER_ID, V.STATION_NO,v.COLLECTION_DEVICEID,
            v.BILLGROUP,v.BOOK_NO_C AS BOOK_NO,v.WALK_NO_C AS WALK_NO ,v.SEQ_NO_C as SEQ_NO,v.tent_name, v.CUSTKEY,v.CYCLE_ID,v.CL_BLNCE,v.BILL_AMOUNT,V.DUE_AMOUNT,v.PAYMENT_NO,v.DELIVERY_ST,
            v.BILNG_DATE,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
			ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
			ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
			ISNULL(min(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
			ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
			ISNULL(min(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
			 from HAND_MH_ST v left outer join receipts r
            on v.custkey=r.custkey
            and v.CYCLE_ID=r.CYCLE_ID
            and v.IS_COLLECTION_ROW=1 and
            (r.CANCELLED=0 or r.CANCELLED is null)
            group by V.EMPID_C,  V.STATION_NO,v.BILLGROUP,v.BOOK_NO_C,v.WALK_NO_C,v.SEQ_NO_C,
            v.tent_name,v.COLLECTION_DEVICEID, v.CUSTKEY,v.CYCLE_ID,v.cl_blnce,v.BILL_AMOUNT,V.DUE_AMOUNT,v.payment_no,v.delivery_st,v.BILNG_DATE" />

    </stms>
  </mig>

  <mig version="14.3" date="9/12/2018">
    <stms>
      <do-nothing></do-nothing>
      <stm sql=""></stm>
    </stms>
  </mig>

  <mig version="14.4" date="9/12/2018">
    <stms>
      <stm skip="1" sql=" DROP VIEW VW_COLLECTION"></stm>
      <stm sql="create view VW_COLLECTION as select v.ctypegrp_id CTYPEGRP_ID, V.C_TYPE,V.COLLECTION_NOTE, max(r.COLLECTION_DATE) COLLECTION_DATE,CONVERT(DATE,max(r.COLLECTION_DATE)) COLLECTION_DAY, v.EMPID_C OWNER_ID, V.STATION_NO,v.COLLECTION_DEVICEID,
      v.BILLGROUP,v.BOOK_NO_C AS BOOK_NO,v.WALK_NO_C AS WALK_NO ,v.SEQ_NO_C as SEQ_NO,v.tent_name, v.CUSTKEY,v.CYCLE_ID,v.CL_BLNCE,v.BILL_AMOUNT,V.DUE_AMOUNT,v.PAYMENT_NO,v.DELIVERY_ST,
      v.BILNG_DATE,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
      ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
      ISNULL(min(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
      ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
      ISNULL(min(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
      from HAND_MH_ST v left outer join receipts r
      on v.custkey=r.custkey
      and v.CYCLE_ID=r.CYCLE_ID
      and v.IS_COLLECTION_ROW=1 and
      (r.CANCELLED=0 or r.CANCELLED is null)
      group by V.EMPID_C,  V.STATION_NO,v.BILLGROUP,v.BOOK_NO_C,v.WALK_NO_C,v.SEQ_NO_C,
      v.tent_name,v.COLLECTION_DEVICEID, v.CUSTKEY,v.CYCLE_ID,v.cl_blnce,v.BILL_AMOUNT,V.DUE_AMOUNT,v.payment_no,v.delivery_st,v.BILNG_DATE,V.C_TYPE,V.COLLECTION_NOTE,v.ctypegrp_id"></stm>
    </stms>
  </mig>
  <mig version="14.5" date="9/12/2018">
    <stms>
      <stm sql="alter table emp add EMP_TYPE INT"></stm>
      <stm sql="create table EMP_TYPES(ID INT primary key,DESCRIPTION nvarchar(60) not null)"></stm>
    </stms>
  </mig>
  <mig version="14.6" date="06/12/2018">
    <stms>
      <stm  sql="ALTER TABLE HAND_MH_ST ADD PREV_OWNER_C INT" />
      <stm  sql="ALTER TABLE HAND_MH_ST ADD TRANSFEER_DATE_C datetime" />
      <stm  sql="CREATE TABLE dbo.WALK_DELIVERY
	      (
	      ID int NOT NULL,
	      STATION_NO int NOT NULL,
	      BILLGROUP nchar(10) NOT NULL,
	      BOOK_NO nchar(10) NOT NULL,
	      WALK_NO nchar(10) NOT NULL,
	      CYCLE_ID int NULL,
	      BILNG_DATE date NULL,
	      STAMP_DATE date NOT NULL,
	      STAMP_USER nchar(30) NULL,
	      FROM_EMP int NOT NULL,
	      TO_EMP int NOT NULL,
	      FROM_NAME nchar(100) NOT NULL,
	      TO_NAME nchar(100) NOT NULL,
        TYPE int NOT NULL,
        NOTE nchar(100)
      ) " />
      <stm  sql="ALTER TABLE dbo.WALK_DELIVERY ADD CONSTRAINT PK_WALK_DELIVERY PRIMARY KEY (ID)" />
    </stms>
  </mig>
  <mig version="14.7" date="06/12/2018">
    <stms>
      <stm  sql="ALTER TABLE HAND_MH_ST ADD PREV_OWNER_R INT" />
      <stm  sql="ALTER TABLE HAND_MH_ST ADD TRANSFEER_DATE_R datetime" />
      <stm  sql="ALTER TABLE HH_BCYC ADD PREV_OWNER_R INT" />
      <stm  sql="ALTER TABLE HH_BCYC ADD TRANSFEER_DATE_R datetime" />
      <stm  sql="ALTER TABLE HH_BCYC ADD PREV_OWNER_C INT" />
      <stm  sql="ALTER TABLE HH_BCYC ADD TRANSFEER_DATE_C datetime" />
    </stms>
  </mig>
  <mig version="16.0" date="16/01/2019">
    <note>this migration file become for version 16 and above only and will not cover old versions</note>
    <stms>
    </stms>
  </mig>
  <mig version="16.1" date="26/01/2019"/>
  <mig version="16.2" date="26/01/2019">
    <stms>
      <stm skip="1" sql=" DROP VIEW VW_COLLECTION"></stm>
      <stm sql="create view VW_COLLECTION as select v.ctypegrp_id CTYPEGRP_ID, V.C_TYPE,V.COLLECTION_NOTE, max(r.COLLECTION_DATE) COLLECTION_DATE,CONVERT(DATE,max(r.COLLECTION_DATE)) COLLECTION_DAY, v.EMPID_C OWNER_ID, V.STATION_NO,v.COLLECTION_DEVICEID,
      v.BILLGROUP,v.BOOK_NO_C AS BOOK_NO,v.WALK_NO_C AS WALK_NO ,v.SEQ_NO_C as SEQ_NO,v.tent_name, v.CUSTKEY,v.CYCLE_ID,isnull(v.CL_BLNCE,0) CL_BLNCE,isnull(v.BILL_AMOUNT,0) BILL_AMOUNT,isnull(V.DUE_AMOUNT,0) DUE_AMOUNT,v.PAYMENT_NO,isnull(v.DELIVERY_ST,0) DELIVERY_ST,
	    isnull(v.CUR_CHARGES,0) CUR_CHARGES,isnull(v.DBT_AMT,0) DBT_AMT,isnull(v.CRDT_AMT,0) CRDT_AMT,
      v.BILNG_DATE,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
      ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
      ISNULL(min(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
      ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
      ISNULL(min(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
      from HAND_MH_ST v left outer join receipts r
      on v.custkey=r.custkey
      and v.CYCLE_ID=r.CYCLE_ID
      and v.IS_COLLECTION_ROW=1 and
      (r.CANCELLED=0 or r.CANCELLED is null)
      group by V.EMPID_C,  V.STATION_NO,v.BILLGROUP,v.BOOK_NO_C,v.WALK_NO_C,v.SEQ_NO_C,
      v.tent_name,v.COLLECTION_DEVICEID, v.CUSTKEY,v.CYCLE_ID,v.cl_blnce,v.BILL_AMOUNT,V.DUE_AMOUNT,v.payment_no,v.delivery_st,v.BILNG_DATE,V.C_TYPE,V.COLLECTION_NOTE,v.ctypegrp_id,v.CUR_CHARGES,v.DBT_AMT,v.CRDT_AMT"></stm>
    </stms>
  </mig>
  <mig version="16.3" date="01/02/2019">
    <stms>
      <stm skip="1" sql=" DROP VIEW VW_COLLECTION"></stm>
      <stm sql="create view VW_COLLECTION as select v.ctypegrp_id CTYPEGRP_ID, V.C_TYPE,V.COLLECTION_NOTE, max(r.COLLECTION_DATE) COLLECTION_DATE,CONVERT(DATE,max(r.COLLECTION_DATE)) COLLECTION_DAY, v.EMPID_C OWNER_ID, V.STATION_NO,v.COLLECTION_DEVICEID,
      v.BILLGROUP,v.BOOK_NO_C AS BOOK_NO,v.WALK_NO_C AS WALK_NO ,v.SEQ_NO_C as SEQ_NO,v.tent_name, v.CUSTKEY,v.CYCLE_ID,isnull(v.CL_BLNCE,0) CL_BLNCE,isnull(v.BILL_AMOUNT,0) BILL_AMOUNT,isnull(V.DUE_AMOUNT,0) DUE_AMOUNT,v.PAYMENT_NO,isnull(v.DELIVERY_ST,0) DELIVERY_ST,
	    isnull(v.CUR_CHARGES,0) CUR_CHARGES,isnull(v.DBT_AMT,0) DBT_AMT,isnull(v.CRDT_AMT,0) CRDT_AMT,
      v.BILNG_DATE,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
      ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
      ISNULL(min(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
      ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
      ISNULL(min(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
      from HAND_MH_ST v left outer join receipts r
      on v.custkey=r.custkey
      and v.CYCLE_ID=r.CYCLE_ID
      where v.IS_COLLECTION_ROW=1 and
      (r.CANCELLED=0 or r.CANCELLED is null)
      group by V.EMPID_C,  V.STATION_NO,v.BILLGROUP,v.BOOK_NO_C,v.WALK_NO_C,v.SEQ_NO_C,
      v.tent_name,v.COLLECTION_DEVICEID, v.CUSTKEY,v.CYCLE_ID,v.cl_blnce,v.BILL_AMOUNT,V.DUE_AMOUNT,v.payment_no,v.delivery_st,v.BILNG_DATE,V.C_TYPE,V.COLLECTION_NOTE,v.ctypegrp_id,v.CUR_CHARGES,v.DBT_AMT,v.CRDT_AMT"></stm>
    </stms>
  </mig>
  <mig version="16.5" date="3/2/2019">
    <stms>
      <stm if="EDAMS" sql="update hand_mh_st set ctypegrp_id=SUBSTRING(c_type,1,2) where ctypegrp_id is null and c_type is not null">

      </stm>
    </stms>
  </mig>
  <mig version="16.6" date="3/2/2019">
    <stms>
      <stm sql="update HAND_MH_ST set reading_date=stamp_date where reading_date is null and reading_note >0"/>
      <stm sql="update HAND_MH_ST set reading_date=CANCEL_DATE_R where reading_date is null and reading_note >0"/>
      <stm sql="update HAND_MH_ST set reading_date=CANCEL_DATE_R where reading_date is null"/>
    </stms>
  </mig>
  <mig version="17.0" date="3/2/2019" note="restart server">
    <stms>
      <stm sql="select * into receipts_mig_bakup from receipts"/>
    </stms>
  </mig>

  <mig version="17.01" date="3/2/2019" note="server will automaticall refill receipts">
    <stm note="server will automatically fill receipts at this point"/>
  </mig>

  <mig version="17.02" date="2/2/2019">
    <stms>
      <stm  sql="ALTER TABLE HAND_MH_ST ADD COLLECTOR_ID INT" />
      <stm sql="update hand_mh_st set COLLECTOR_ID=empid_c where delivery_st=1" />
      <stm sql="update HAND_MH_ST set EMPID_C=(select HH_BCYC.EMPID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1" />
      <stm  sql="update HAND_MH_ST set COLLECTION_DEVICEID=(select HH_BCYC.DEVICEID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1 and COLLECTION_DEVICEID is null" />
      <stm  sql="update HAND_MH_ST set EMPID_R=(select HH_BCYC.EMPID_R from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_R
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_R)
        where IS_READING_ROW=1 and (EMPID_R is null)" />
      <stm  sql="update HAND_MH_ST set READING_DEVICEID=(select HH_BCYC.DEVICEID_R from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_R
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_R)
        where IS_READING_ROW=1 and READING_DEVICEID is null" />
    </stms>
  </mig>
  <mig version="17.03" date="2/2/2019">
    <stms>
      <stm sql="CREATE NONCLUSTERED INDEX ix_receipts_c_p_t ON dbo.RECEIPTS
	    (
	    CUSTKEY,
	    PAYMENT_NO,
	    COLLECTION_TYPE
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)"></stm>
      <stm sql="CREATE NONCLUSTERED INDEX IX_RECEIPTS_bilng_date ON dbo.RECEIPTS
	    (
	    BILNG_DATE
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) "></stm>
      <stm sql="CREATE NONCLUSTERED INDEX IX_RECEIPTS_c_meth ON dbo.RECEIPTS
	(
	PAYMENT_METHOD
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)"></stm>
      <stm sql="CREATE NONCLUSTERED INDEX IX_HAND_MH_ST_bilng ON dbo.HAND_MH_ST
	(
	BILNG_DATE
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)"></stm>
      <stm sql="CREATE NONCLUSTERED INDEX IX_HAND_MH_ST__emp ON dbo.HAND_MH_ST
	(
	EMPID_C
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)"></stm>
      <stm if="EDAMS" sql="update hand_mh_st set ctypegrp_id=SUBSTRING(c_type,1,2) where ctypegrp_id is null and c_type is not null">
      </stm>
    </stms>
  </mig>
  <mig version="17.04" date="4/2/2019">
    <stms>
      <stm sql="CREATE TABLE dbo.RECEIPT_DTLS
	              (
	                RECEIPT_NO nvarchar(50) NOT NULL,
                  CUSTKEY  nvarchar(50) NOT NULL,
	                TARGET_PAYMENT_NO nvarchar(50) NOT NULL,
	                AMOUNT float(53) NOT NULL,
                  CHECK (AMOUNT>=0)
	              )"> </stm>
      <stm sql="ALTER TABLE dbo.RECEIPT_DTLS ADD CONSTRAINT
	              PK_RECEIPT_DTLS PRIMARY KEY CLUSTERED
	              (
	                RECEIPT_NO,
	                TARGET_PAYMENT_NO
	              ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" >
      </stm>
    </stms>
  </mig>
  <mig version="17.05" date="06/02/2019">
    <stms>
      <stm skip="1" sql=" DROP VIEW VW_COLLECTION"></stm>
      <stm sql="create view VW_COLLECTION as select v.ctypegrp_id CTYPEGRP_ID, V.C_TYPE,V.COLLECTION_NOTE, max(r.COLLECTION_DATE) COLLECTION_DATE,CONVERT(DATE,max(r.COLLECTION_DATE)) COLLECTION_DAY, v.EMPID_C OWNER_ID, V.STATION_NO,v.COLLECTION_DEVICEID,
      v.BILLGROUP,v.BOOK_NO_C AS BOOK_NO,v.WALK_NO_C AS WALK_NO ,v.SEQ_NO_C as SEQ_NO,v.tent_name, v.CUSTKEY,v.CYCLE_ID,isnull(v.CL_BLNCE,0) CL_BLNCE,isnull(v.BILL_AMOUNT,0) BILL_AMOUNT,isnull(V.DUE_AMOUNT,0) DUE_AMOUNT,v.PAYMENT_NO,isnull(v.DELIVERY_ST,0) DELIVERY_ST,
	    isnull(v.CUR_CHARGES,0) CUR_CHARGES,isnull(v.DBT_AMT,0) DBT_AMT,isnull(v.CRDT_AMT,0) CRDT_AMT,
      v.BILNG_DATE,ISNULL(sum( r.amount),0) TOTAL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE=0 then r.amount else 0 end),0) BILL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then r.amount else 0 end),0) PARTIAL_COLLECTED_AMOUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE=0 then 1 else 0 end),0) BILL_COLLECTED_COUNT,
      ISNULL(sum(case when r.COLLECTION_TYPE!=0 then 1 else 0 end),0) PARTIAL_COLLECTED_COUNT,
      ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then r.amount else 0 end),0) DEPOSITED_AMOUNT,
      ISNULL(sum(case when r.DEPOSIT_ID IS NOT NULL then 1 else 0 end),0) DEPOSITED_COUNT,
      ISNULL(sum(case when r.IS_POSTED =1 then r.amount else 0 end),0) POSTED_AMOUNT,
      ISNULL(sum(case when r.IS_POSTED =1 then 1 else 0 end),0) POSTED_COUNT
      from HAND_MH_ST v left outer join receipts r
      on v.custkey=r.custkey
      and v.CYCLE_ID=r.CYCLE_ID
      where v.IS_COLLECTION_ROW=1 and
      (r.CANCELLED=0 or r.CANCELLED is null)
      group by V.EMPID_C,  V.STATION_NO,v.BILLGROUP,v.BOOK_NO_C,v.WALK_NO_C,v.SEQ_NO_C,
      v.tent_name,v.COLLECTION_DEVICEID, v.CUSTKEY,v.CYCLE_ID,v.cl_blnce,v.BILL_AMOUNT,V.DUE_AMOUNT,v.payment_no,v.delivery_st,v.BILNG_DATE,V.C_TYPE,V.COLLECTION_NOTE,v.ctypegrp_id,v.CUR_CHARGES,v.DBT_AMT,v.CRDT_AMT"></stm>
    </stms>
  </mig>
  <mig version="17.06" date="12/2/2019">
    <stms>
      <stm  sql="ALTER TABLE HAND_MH_ST ADD READING_CYCLEID INT" />
      <stm  sql="ALTER TABLE HAND_MH_ST ADD READING_BILNGDATE DATE" />
    </stms>
  </mig>
  <mig version="17.07" date="13/2/2019">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MIN_CHARGE_CURCHARGE',0)" />
    </stms>
  </mig>

  <mig version="17.08" date="16/2/2019">
    <stms>
      <stm sql="CREATE TABLE dbo.BILNG_ACTIONS
	    (
	    APPLICATION_TYPE int NOT NULL,
	    DESCRIPTION nvarchar(256) NULL,
	    CUSTKEY nvarchar(50) NOT NULL,
	    STAMP_DATE datetime NOT NULL,
	    STAMP_USER nvarchar(250)  NULL,
      USER_NAME nvarchar(50)  NULL,
      USER_ID nvarchar(50) NULL
	    )  ON [PRIMARY]" />
      <stm sql="ALTER TABLE dbo.BILNG_ACTIONS ADD CONSTRAINT PK_BILNG_ACTIONS PRIMARY KEY CLUSTERED (CUSTKEY,STAMP_DATE) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"></stm>
    </stms>
  </mig>

  <mig version="17.09" date="16/2/2019">
    <stms>
      <stm sql="ALTER TABLE USERS ADD EDAMS_RECALC_NEW BIT NULL;" />
    </stms>
  </mig>
  <mig version="17.10" date="10/4/2019">
    <stms>
      <stm sql="update hand_mh_st set COLLECTOR_ID=empid_c where delivery_st=1 and COLLECTOR_ID is null" />
      <stm sql="update HAND_MH_ST set EMPID_C=(select HH_BCYC.EMPID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1" />
      <stm  sql="update HAND_MH_ST set COLLECTION_DEVICEID=(select HH_BCYC.DEVICEID_C from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_C
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_C)
        where IS_COLLECTION_ROW=1 and COLLECTION_DEVICEID is null" />
      <stm  sql="update HAND_MH_ST set EMPID_R=(select HH_BCYC.EMPID_R from HH_BCYC where HH_BCYC.BILLGROUP=HAND_MH_ST.BILLGROUP and HH_BCYC.CYCLE_ID
        =HAND_MH_ST.CYCLE_ID and HH_BCYC.BOOK_NO=HAND_MH_ST.BOOK_NO_R
        and HH_BCYC.WALK_NO=HAND_MH_ST.WALK_NO_R)
        where IS_READING_ROW=1 and (EMPID_R is null)" />
    </stms>
  </mig>
  <mig version="17.11" date="15/5/2019">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MATCH_RECEIPT_PAYMENT',0)"/>
    </stms>
  </mig>
  <mig version="17.12" date="22/5/2019">
    <stms>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MASGATE_HOST','http://masgate.com')"/>
      <stm sql="INSERT INTO SETTINGS (KEY_WORD,KEY_VALUE) VALUES('MASGATE_PORT','26612')"/>
    </stms>
  </mig>
  <mig version="17.13" date="29/5/2019">
    <stms>
      <stm skip="1" sql="ALTER TABLE HH_BCYC ADD ALLOW_FAWRY int NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FAWRY_OPEN_BY VARCHAR(128) NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FAWRY_CLOSE_BY VARCHAR(128) NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FAWRY_OPEN_DATE DATETIME NULL;" />
      <stm sql="ALTER TABLE HH_BCYC ADD FAWRY_CLOSE_DATE DATETIME NULL;" />
    </stms>
  </mig>
  <mig version="17.14" date="10/6/2019">
    <stms>
      <stm sql="CREATE TABLE dbo.FAWRY_TRANS
	      (
	      ID bigint NOT NULL IDENTITY (1, 1),
        REQ_TYPE nvarchar(100) NULL,
	      STAMP_DATE datetime NULL,
        BILNG_DATE date NULL,
	      MSG_CODE nvarchar(100) NULL,
	      CUSTKEY nvarchar(100) NULL,
	      STATION_NO nvarchar(100) NULL,
	      PROJECT_TAG nvarchar(100) NULL,
	      PAYMENT_NO nvarchar(100) NULL,
	      CL_BLNCE decimal(18, 3) NULL,
  	    AMOUNT_COLLECTED decimal(18, 3) NULL,
        REMOTE_IP nvarchar(100) NULL,
        REMOTE_PORT INT NULL,
        FAWRY_BILLER_ID nvarchar(100) NULL,
        TERMINAL_ID nvarchar(100) NULL,
        PYMT_METHOD nvarchar(100) NULL,
        FAWRY_TRANS_ID  nvarchar(100) NULL,
        ERROR_MSG  nvarchar(256) NULL,
        ERROR_NO  nvarchar(100) NULL,
        IS_RETRY int null
	      )  ON [PRIMARY]"></stm>
      <stm sql="ALTER TABLE dbo.FAWRY_TRANS ADD CONSTRAINT
	    PK_FAWRY_TRANS PRIMARY KEY CLUSTERED
	    (
	    ID
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"></stm>
      <stm sql="CREATE PROCEDURE [dbo].[FawryInquiry]
   @BillingAcctPram varchar(60),
   @BILLER_ID varchar(60),
   @MSG_CODE varchar(60),
   @LastBillAmount decimal(18,3) OUTPUT,
   @Surname varchar(256) OUTPUT,
   @DueDate date OUTPUT,
   @PaymentNo  varchar(60) OUTPUT,
   @HasError bit OUTPUT,
   @ErrorNo int OUTPUT,
   @ErrorMessage varchar(256) OUTPUT

AS
DECLARE
            @count INT,
			@bilngDate date,
			@cycleId int,
			@stationNo int,
			@billgroup varchar(60),
			@bookno varchar(60),
			@walkNo int,
			@amtCollected decimal(18,3)

BEGIN
begin try
		BEGIN TRANSACTION
	set @HasError=0;
	set @ErrorNo=null;
	set @ErrorMessage=null;
	set @PaymentNo=null;
	set @DueDate=null;
	set  @Surname=null;

	select @count=count(*) from HAND_MH_ST where CUSTKEY= @BillingAcctPram and IS_COLLECTION_ROW=1;
	if(@count=0) begin
		set @HasError=1;
		set @ErrorMessage='Account not found:'+@BillingAcctPram
		set @ErrorNo=50001
		 GOTO FINISH
		--ROLLBACK TRANSACTION;
		--return;
	end;

	select  @bilngDate= max(BILNG_DATE) from HAND_MH_ST where CUSTKEY=@BillingAcctPram and IS_COLLECTION_ROW=1;
	select @count=count(*) from HAND_MH_ST where CUSTKEY= @BillingAcctPram and IS_COLLECTION_ROW=1 and BILNG_DATE=@bilngDate ;
	if(@count>1) begin
		set @HasError=1;
		set @ErrorMessage='Conflict:Dupplicate Account Number:'+@BillingAcctPram
		set @ErrorNo=50002
		GOTO FINISH
		--ROLLBACK TRANSACTION;
		--return;
	end;
	select @LastBillAmount=cl_blnce,@Surname=tent_name,@DueDate=BILNG_DATE,@PaymentNo=payment_no
	,@stationNo=STATION_NO,@billgroup=BILLGROUP,@bookno=BOOK_NO_C,@walkNo=WALK_NO_C,@cycleId=CYCLE_ID
	 from HAND_MH_ST where CUSTKEY= @BillingAcctPram and IS_COLLECTION_ROW=1 and BILNG_DATE=@bilngDate ;

	select @count= COUNT(*) from HH_BCYC where STATION_NO=@stationNo and BILLGROUP=@billgroup and BOOK_NO=@bookno and WALK_NO=@walkNo
	and CYCLE_ID=@cycleId and allow_fawry=1  and (ISCYCLE_COMPLETED_C=0 or ISCYCLE_COMPLETED_C=null)   ;
	if(@count=0) begin
		set @HasError=1;
		set @ErrorMessage='Collection Not Allowed :'+@BillingAcctPram
		set @ErrorNo=50003
		set @PaymentNo=null
		set @LastBillAmount=null
		GOTO FINISH
		--set @DueDate=null
		--ROLLBACK TRANSACTION;
		--return;
	end;
	SELECT @amtCollected= SUM(R.AMOUNT) FROM RECEIPTS R WHERE (R.CANCELLED=0 OR R.CANCELLED IS NULL) AND R.CUSTKEY=@BillingAcctPram AND
	R.PAYMENT_NO=@PaymentNo;
	IF(@amtCollected>0 and @amtCollected>=(@LastBillAmount-1)) BEGIN
	set @HasError=1;
		set @ErrorMessage='Payment collected already:'+@BillingAcctPram
		set @ErrorNo=50004
		set @PaymentNo=null
		set @LastBillAmount=null
		GOTO FINISH
	END;
	FINISH:
	INSERT INTO FAWRY_TRANS (STAMP_DATE,BILNG_DATE,MSG_CODE,CUSTKEY,STATION_NO,PAYMENT_NO,CL_BLNCE,
	FAWRY_BILLER_ID,REQ_TYPE,ERROR_MSG,ERROR_NO) VALUES(GETDATE(),@DueDate,@MSG_CODE,@BillingAcctPram,@stationNo,@PaymentNo,@LastBillAmount,@BILLER_ID,'INQUIRY',@ErrorMessage,@ErrorNo)
   commit;
   end try
   BEGIN CATCH
		set @HasError=1;
		set @ErrorMessage='Internal error:'+ERROR_MESSAGE();
		set @ErrorNo=50000;
		ROLLBACK TRANSACTION
END CATCH;
END"></stm>
    </stms>
  </mig>
  <mig version="17.15" date="10/06/2019">
    <stms>
      <stm skip="1"   sql="ALTER TABLE RECEIPTS ADD FAWRY_TRANS_NO VARCHAR(1000)" />
      <stm skip="1"  sql="create PROCEDURE [dbo].[FawryPaymentNotify]
   @BillingAcctPram varchar(60),
   @BILLER_ID varchar(60),
   @MSG_CODE varchar(60),
   @AmountCollected decimal(18,3),
   @PaymentNo varchar(100),
   @PmtType varchar(256),
   @FTRNO varchar(1000),
   @TerminalId varchar(256),
   @BNKPTN varchar(1000),
   @FCRNP varchar(1000),
   @PROC_DATE date,
   @REMOTE_IP varchar(256),
   @IsRetry int,
   @HasError bit OUTPUT,
   @ErrorNo int OUTPUT,
   @ErrorMessage varchar(256) OUTPUT

AS
DECLARE
            @count INT,
			@bilngDate date,
			@cycleId int,
			@stationNo int,
			@billgroup varchar(60),
			@bookno varchar(60),
			@walkNo int,
			@exsist int,
			@LastBillAmount decimal(18,3),
			@FawryEmpId int,
			@StatmNo int,
			@RecepNo varchar(100),
			@itr int,
			@ColId int

BEGIN
begin try
		BEGIN TRANSACTION
	set @HasError=0;
	set @ErrorNo=null;
	set @ErrorMessage=null;
	set @FawryEmpId=-125

	select @count=count(*) from HAND_MH_ST where CUSTKEY= @BillingAcctPram and payment_no=@PaymentNo;
	if(@count=0) begin
		set @HasError=1;
		set @ErrorMessage='Account not found:'+@BillingAcctPram
		set @ErrorNo=50001
		 GOTO FINISH
		--ROLLBACK TRANSACTION;
		--return;
	end;

	SELECT @exsist= count(*) FROM RECEIPTS R WHERE (R.CANCELLED=0 OR R.CANCELLED IS NULL) AND R.CUSTKEY=@BillingAcctPram AND
	R.PAYMENT_NO=@PaymentNo and r.FAWRY_TRANS_NO=@FTRNO ;

	if( @exsist>0) begin
	GOTO FINISH
	end;
	select @bilngDate=BILNG_DATE,@LastBillAmount=cl_blnce,@StatmNo=STATM_NO
	,@stationNo=STATION_NO,@billgroup=BILLGROUP,@bookno=BOOK_NO_C,@walkNo=WALK_NO_C,@cycleId=CYCLE_ID
	 from HAND_MH_ST where CUSTKEY= @BillingAcctPram and IS_COLLECTION_ROW=1 and payment_no=@PaymentNo ;

	 set @count=1;
	 set @RecepNo=@PaymentNo;
	 set @itr=0;
	 while(@count>0) begin
	     if(@itr>0) begin
			set @RecepNo=rtrim(@PaymentNo)+'/'+cast(@itr as varchar);
		 end;
	 	 select @count=count(*) from RECEIPTS where RECEIPT_NO= @RecepNo;
		 set @itr=@itr+1
	 end;

	 set @ColId=1;
	 SELECT @exsist= count(*) FROM RECEIPTS R WHERE (R.CANCELLED=0 OR R.CANCELLED IS NULL) AND R.CUSTKEY=@BillingAcctPram AND
	 R.PAYMENT_NO=@PaymentNo ;

	 if(@exsist>0) begin
	 SELECT @ColId= max(collection_id) FROM RECEIPTS R WHERE (R.CANCELLED=0 OR R.CANCELLED IS NULL) AND R.CUSTKEY=@BillingAcctPram AND
	 R.PAYMENT_NO=@PaymentNo;
	 set @ColId=@ColId+1;
	 end;

	INSERT INTO RECEIPTS  (EMP_ID, AMOUNT, RECEIPT_NO,CUSTKEY,PAYMENT_NO,BILNG_DATE,INS_BILNG_DATE,CYCLE_ID,INS_CYCLE_ID,
	PAYMENT_METHOD,COLLECTION_TYPE,COLLECTION_METHOD,COLLECTION_DATE,COLLECTION_ID,FAWRY_TRANS_NO,BILLGROUP,BOOK_NO,WALK_NO,STATION_NO,STAMP_DATE,STAMP_USER,STATM_NO,DOCUMENT_NO)
	VALUES(@FawryEmpId,@AmountCollected, @RecepNo,@BillingAcctPram,@PaymentNo, @bilngDate, @bilngDate,@cycleId,@cycleId,3,0,4,GETDATE(),@ColId,@FTRNO,@billgroup,@bookno,@walkNo,@stationNo,GETDATE(),'FAWRY',@StatmNo,@FCRNP);

	FINISH:
	INSERT INTO FAWRY_TRANS (STAMP_DATE,BILNG_DATE,MSG_CODE,CUSTKEY,STATION_NO,PAYMENT_NO,CL_BLNCE,
	FAWRY_BILLER_ID,REQ_TYPE,ERROR_MSG,ERROR_NO,IS_RETRY,AMOUNT_COLLECTED,REMOTE_IP,FAWRY_TRANS_ID,PYMT_METHOD,TERMINAL_ID) VALUES(GETDATE(),@bilngDate,@MSG_CODE,@BillingAcctPram,@stationNo,@PaymentNo,@LastBillAmount,@BILLER_ID,'PAYMENT',@ErrorMessage,@ErrorNo,@IsRetry,@AmountCollected,@REMOTE_IP,@FTRNO,@PmtType,@TerminalId)
   commit;
   end try
   BEGIN CATCH
		set @HasError=1;
		set @ErrorMessage='Internal error:'+ERROR_MESSAGE();
		set @ErrorNo=50000;
		ROLLBACK TRANSACTION
		INSERT INTO FAWRY_TRANS (STAMP_DATE,BILNG_DATE,MSG_CODE,CUSTKEY,STATION_NO,PAYMENT_NO,CL_BLNCE,
	FAWRY_BILLER_ID,REQ_TYPE,ERROR_MSG,ERROR_NO,IS_RETRY,AMOUNT_COLLECTED,REMOTE_IP,FAWRY_TRANS_ID,PYMT_METHOD,TERMINAL_ID) VALUES(GETDATE(),@bilngDate,@MSG_CODE,@BillingAcctPram,@stationNo,@PaymentNo,@LastBillAmount,@BILLER_ID,'PAYMENT',@ErrorMessage,@ErrorNo,@IsRetry,@AmountCollected,@REMOTE_IP,@FTRNO,@PmtType,@TerminalId)
END CATCH;
END" />
      <stm skip="1" sql="CREATE LOGIN [fawry] WITH PASSWORD=N'hgr]vUvfdm@2020', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF" />
      <stm skip="1" sql="CREATE USER [fawry] FOR LOGIN [fawry]" />
      <stm skip="1" sql="GRANT EXECUTE ON [dbo].[FawryPaymentNotify] TO [fawry]" />
      <stm skip="1" sql="GRANT EXECUTE ON [dbo].[FawryInquiry] TO [fawry]" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_FAWRY_OPEN BIT NULL;" />
      <stm sql="ALTER TABLE USERS ADD ALLOW_FAWRY_CLOSE BIT NULL;" />
    </stms>
  </mig>
  <mig version="17.16" date="23/06/2019">
    <stms>
      <stm  sql="ALTER TABLE RECEIPTS ADD CANCELLED_RECIEPT_NO VARCHAR(256)" />
    </stms>
  </mig>

  <mig version="17.17" date="26/06/2019">
    <stms>
      <stm sql="ALTER PROCEDURE [dbo].[FawryPaymentNotify] @BillingAcctPram varchar(60),
@BILLER_ID varchar(60),
@MSG_CODE varchar(60),
@AmountCollected decimal(18, 3),
@PaymentNo varchar(100),
@PmtType varchar(256),
@FTRNO varchar(1000),
@TerminalId varchar(256),
@BNKPTN varchar(1000),
@FCRNP varchar(1000),
@PROC_DATE date,
@REMOTE_IP varchar(256),
@IsRetry int,
@HasError bit OUTPUT,
@ErrorNo int OUTPUT,
@ErrorMessage varchar(256) OUTPUT

AS
  DECLARE @count int,
          @bilngDate date,
          @cycleId int,
          @stationNo int,
          @billgroup varchar(60),
          @bookno varchar(60),
          @walkNo int,
          @exsist int,
          @LastBillAmount decimal(18, 3),
          @FawryEmpId int,
          @StatmNo int,
          @RecepNo varchar(100),
          @itr int,
          @ColId int

  BEGIN
    INSERT INTO FAWRY_TRANS (STAMP_DATE, BILNG_DATE, MSG_CODE, CUSTKEY, STATION_NO, PAYMENT_NO, CL_BLNCE,
    FAWRY_BILLER_ID, REQ_TYPE, ERROR_MSG, ERROR_NO, IS_RETRY, AMOUNT_COLLECTED, REMOTE_IP, FAWRY_TRANS_ID, PYMT_METHOD, TERMINAL_ID)
      VALUES (GETDATE(), @bilngDate, @MSG_CODE, @BillingAcctPram, @stationNo, @PaymentNo, @LastBillAmount, @BILLER_ID, 'PAYMENT', @ErrorMessage, @ErrorNo, @IsRetry, @AmountCollected, @REMOTE_IP, @FTRNO, @PmtType, @TerminalId)
    BEGIN TRY
      BEGIN TRANSACTION
        SET @HasError = 0;
        SET @ErrorNo = NULL;
        SET @ErrorMessage = NULL;
        SET @FawryEmpId = -125

        SELECT
          @count = COUNT(*)
        FROM HAND_MH_ST
        WHERE CUSTKEY = @BillingAcctPram
        AND payment_no = @PaymentNo;
        IF (@count = 0)
        BEGIN
          SET @HasError = 1;
          SET @ErrorMessage = 'Account not found:' + @BillingAcctPram
          SET @ErrorNo = 50001
          --GOTO FINISH
          ROLLBACK;
          RETURN;
        END;

        SELECT
          @exsist = COUNT(*)
        FROM RECEIPTS R
        WHERE (R.CANCELLED = 0
        OR R.CANCELLED IS NULL)
        AND R.CUSTKEY = @BillingAcctPram
        AND R.PAYMENT_NO = @PaymentNo
        AND r.FAWRY_TRANS_NO = @FTRNO;

        IF (@exsist > 0)
        BEGIN
          ROLLBACK;
          RETURN;
        END;
        SELECT
          @bilngDate = BILNG_DATE,
          @LastBillAmount = cl_blnce,
          @StatmNo = STATM_NO,
          @stationNo = STATION_NO,
          @billgroup = BILLGROUP,
          @bookno = BOOK_NO_C,
          @walkNo = WALK_NO_C,
          @cycleId = CYCLE_ID
        FROM HAND_MH_ST
        WHERE CUSTKEY = @BillingAcctPram
        AND IS_COLLECTION_ROW = 1
        AND payment_no = @PaymentNo;

        SET @count = 1;
        SET @RecepNo = @PaymentNo;
        SET @itr = 0;
        WHILE (@count > 0)
        BEGIN
          IF (@itr > 0)
          BEGIN
            SET @RecepNo = RTRIM(LTRIM(@PaymentNo)) + '/' + CAST(@itr AS varchar);
          END;
          SELECT
            @count = COUNT(*)
          FROM RECEIPTS
          WHERE RECEIPT_NO = @RecepNo;
          SET @itr = @itr + 1
        END;

        SET @ColId = 1;
        SELECT
          @exsist = COUNT(*)
        FROM RECEIPTS R
        WHERE (R.CANCELLED = 0
        OR R.CANCELLED IS NULL)
        AND R.CUSTKEY = @BillingAcctPram
        AND R.PAYMENT_NO = @PaymentNo
        AND COLLECTION_ID lt 1000000;

        IF (@exsist > 0)
        BEGIN
          SELECT
            @ColId = MAX(collection_id)
          FROM RECEIPTS R
          WHERE (R.CANCELLED = 0
          OR R.CANCELLED IS NULL)
          AND R.CUSTKEY = @BillingAcctPram
          AND R.PAYMENT_NO = @PaymentNo
          AND COLLECTION_ID lt 1000000;
          SET @ColId = @ColId + 1;
        END;

        INSERT INTO RECEIPTS (EMP_ID, AMOUNT, RECEIPT_NO, CUSTKEY, PAYMENT_NO, BILNG_DATE, INS_BILNG_DATE, CYCLE_ID, INS_CYCLE_ID,
        PAYMENT_METHOD, COLLECTION_TYPE, COLLECTION_METHOD, COLLECTION_DATE, COLLECTION_ID, FAWRY_TRANS_NO, BILLGROUP, BOOK_NO, WALK_NO, STATION_NO, STAMP_DATE, STAMP_USER, STATM_NO, DOCUMENT_NO)
          VALUES (@FawryEmpId, @AmountCollected, @RecepNo, @BillingAcctPram, @PaymentNo, @bilngDate, @bilngDate, @cycleId, @cycleId, 3, 0, 4, GETDATE(), @ColId, @FTRNO, @billgroup, @bookno, @walkNo, @stationNo, GETDATE(), 'FAWRY', @StatmNo, @FCRNP);
      COMMIT;
    END TRY
    BEGIN CATCH
      SET @HasError = 1;
      SET @ErrorMessage = 'Internal error:' + ERROR_MESSAGE();
      SET @ErrorNo = 50000;
      ROLLBACK;
    END CATCH;
  END"></stm>
    </stms>
  </mig>
  <mig version="17.18" date="26/06/2019">
    <stms>
      <stm sql="alter table receipts alter column [DISCOUNT_DOCUMENT_NO]  NVARCHAR(30);
    alter table receipts alter column  [DOCUMENT_NO] NVARCHAR(30);
    alter table receipts alter column [DEVICE_ID]  NVARCHAR(60);
    alter table receipts alter column [STAMP_USER]  NVARCHAR(30);
    alter table receipts alter column [POST_BY]  NVARCHAR(60);
    alter table receipts alter column [BILLGROUP]  NVARCHAR(10);
    alter table receipts alter column [BOOK_NO]  NVARCHAR(10);
    alter table receipts alter column [WALK_NO]  NVARCHAR(10);
    alter table receipts alter column [CHEQ_NO]  NVARCHAR(30);
    alter table receipts alter column  [CHEQ_BANK] NVARCHAR(60);
    update RECEIPTS set RECEIPT_NO=ltrim(RTRIM(RECEIPT_NO));
    update RECEIPTS set CUSTKEY=ltrim(RTRIM(CUSTKEY));
    update RECEIPTS set PAYMENT_NO=ltrim(RTRIM(PAYMENT_NO));
    update RECEIPTS set DEVICE_ID=ltrim(RTRIM(DEVICE_ID));
    update RECEIPTS set DOCUMENT_NO=ltrim(RTRIM(DOCUMENT_NO));
    update RECEIPTS set BILLGROUP=ltrim(RTRIM(BILLGROUP));
    update RECEIPTS set BOOK_NO=ltrim(RTRIM(BOOK_NO));
    update RECEIPTS set WALK_NO=ltrim(RTRIM(WALK_NO));
    update RECEIPTS set CHEQ_BANK=ltrim(RTRIM(CHEQ_BANK));
    update RECEIPTS set CHEQ_NO=ltrim(RTRIM(CHEQ_NO));
    update RECEIPTS set POST_BY=ltrim(RTRIM(POST_BY));
    update RECEIPTS set STAMP_USER=ltrim(RTRIM(STAMP_USER));
    update RECEIPTS set DISCOUNT_DOCUMENT_NO=ltrim(RTRIM(DISCOUNT_DOCUMENT_NO));"></stm>
    </stms>
  </mig>
  <mig version="17.19" date="10/07/2019">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD  USER_ID INT NULL "/>
      <stm sql="ALTER TABLE STATM_DEPOSITS ADD  USER_ID INT NULL "/>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('PULL_COL_STM_BILLING',0)" />
    </stms>
  </mig>
  <mig version="17.20" date="17/07/2019">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('DEBUG',0)" />
    </stms>
  </mig>
  <mig version="17.21" date="21/07/2019">
    <stms>
      <stm sql="ALTER TABLE PRINT_LOGS ADD USER_NAME nvarchar(256) NULL"/>
      <stm sql="ALTER TABLE PRINT_LOGS ADD MACHINE_IP nvarchar(256) NULL"/>
      <stm sql="ALTER TABLE PRINT_LOGS ADD FROM_SERVER bit NULL"/>
      <stm sql="ALTER TABLE PRINT_LOGS ADD RECEIPT_NO nvarchar(256) NULL"/>
      <stm sql="ALTER TABLE PRINT_LOGS ADD DEPOSIT_ID bigint NULL"/>
    </stms>
  </mig>
  <mig version="17.22" date="25/08/2019">
    <stms>
      <stm skip="1" sql="ALTER TABLE dbo.RECEIPTS DROP CONSTRAINT PK_RECEIPT"/>
      <stm sql="ALTER TABLE RECEIPTS ALTER COLUMN RECEIPT_NO NVARCHAR(60) NOT NULL"/>
      <stm sql="ALTER TABLE dbo.RECEIPTS ADD CONSTRAINT PK_RECEIPT PRIMARY KEY CLUSTERED (RECEIPT_NO)"/>
      <stm sql="update RECEIPTS set RECEIPT_NO=ltrim(RTRIM(RECEIPT_NO))" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MINIA_FLAG',0)" />
    </stms>
  </mig>
  <mig version="17.23" date="25/08/2019">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('ENABLE_COMPRESSION',1)" />
    </stms>
  </mig>
  <mig version="17.24" date="02/12/2019">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_MODIFY_PREV_READING BIT NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD IS_VERFIED bit NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD VERFIED_BY NVARCHAR(100) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD VERFIED_DATE datetime NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD OLD_VALUE NVARCHAR(100) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD NEW_VALUE NVARCHAR(100) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD OLD_DATE DATETIME NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD NEW_DATE DATETIME NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM1 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM2 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM3 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM4 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM5 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM6 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM7 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM8 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM9 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CUSTOM10 NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD METER_TYPE NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD METER_REF NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD PROP_REF NVARCHAR(255) NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CANCELED bit NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD CANCEL_DATE datetime NULL;" />
      <stm sql="ALTER TABLE BILNG_ACTIONS ADD NOTE NVARCHAR(510)  NULL;" />
    </stms>
  </mig>
  <mig version="17.26" date="08/12/2019">
    <stms>
      <stm sql="ALTER TABLE RECEIPTS ADD FPTN NVARCHAR(255)  NULL;" />
      <stm sql="ALTER TABLE RECEIPTS ADD BLRPTN NVARCHAR(255)  NULL;" />
      <stm sql="ALTER TABLE RECEIPTS ADD FCRN NVARCHAR(255)  NULL;" />
    </stms>
  </mig>
  <mig version="17.27" date="08/12/2019">
    <stms>
      <stm sql="alter table hand_mh_st alter column billgroup nvarchar(30)" />
      <stm sql="alter table hand_mh_st alter column book_no_c nvarchar(30)" />
      <stm sql="alter table hand_mh_st alter column book_no_r nvarchar(30)" />
      <stm sql="alter table hand_mh_st alter column walk_no_c nvarchar(30)" />
      <stm sql="alter table hand_mh_st alter column walk_no_r nvarchar(30)" />
      <stm skip="1" sql="alter table hh_bcyc alter column billgroup nvarchar(30)" />
      <stm skip="1" sql="alter table hh_bcyc alter column book_no nvarchar(30)" />
      <stm skip="1" sql="alter table hh_bcyc alter column walk_no nvarchar(30)" />
    </stms>
  </mig>
  <mig version="17.28" date="08/12/2019">
    <stms>
      <stm sql="alter table EMP add BILNG_EMP_ID nvarchar(30)" />
    </stms>
  </mig>
  <mig version="17.29" date="08/12/2019">
    <stms>
      <stm sql="alter table RECEIPTS alter column billgroup nvarchar(30)" />
      <stm sql="alter table RECEIPTS alter column book_no nvarchar(30)" />
      <stm sql="alter table RECEIPTS alter column walk_no nvarchar(30)" />
    </stms>
  </mig>
  <mig version="17.30" date="11/12/2019">
    <stms>
      <stm sql="alter table RECEIPTS alter column billgroup nvarchar(30)" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('CONVERT_NEGATIVE_CL_BLNCE_TOZERO',0)" />
    </stms>
  </mig>
  <mig version="17.31" date="14/12/2019">
    <stms>
      <stm sql="ALTER TABLE USERS ADD LIST_COLLECTION BIT NULL;" />
    </stms>
  </mig>
  <mig version="17.32" date="14/12/2019">
    <stms>
      <stm sql="CREATE TABLE dbo.PAYMENT_METHODS
	    (
	      TYPE_ID int NOT NULL,
	      DESCRIPTION varchar(250) NOT NULL,
	      BILING_CODE varchar(250) NULL,
	      SELECTABLE bit NULL,
	      IS_SYSTEM bit NULL
	    )  ON [PRIMARY]" />
      <stm sql="ALTER TABLE dbo.PAYMENT_METHODS ADD CONSTRAINT 	PK_PAYMENT_METHODS PRIMARY KEY CLUSTERED 	(	TYPE_ID	) " />
      <stm sql="ALTER TABLE dbo.PAYMENT_METHODS ADD CONSTRAINT 	IX_PAYMENT_METHODS UNIQUE NONCLUSTERED 	(	DESCRIPTION	)" />
      <stm sql="alter table RECEIPTS ADD COMMENT VARCHAR(255) null " />
    </stms>
  </mig>
  <mig version="17.33" date="24/2/2020">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD READ_BY nvarchar(50) NULL" />
      <stm sql="ALTER TABLE HAND_MH_ST ADD READ_METHOD nvarchar(50) NULL" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MARKETING',0)" />
      <stm sql=" ALTER TABLE CUSTOMER_WALKS ADD MARKETING INT NULL" />
    </stms>
  </mig>
  <mig version="17.34" date="1/3/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('EDAMS_MRECEIPT','MRECEIPT')" />
    </stms>
  </mig>
  <mig version="17.35" date="1/3/2020">
    <stms>
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_AMOUNT1 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_PERCENTAGE1 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_TITLE1 NVARCHAR(100) NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_AMOUNT2 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_PERCENTAGE2 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_TITLE2 NVARCHAR(100) NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_AMOUNT3 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_PERCENTAGE3 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD RECEIPT_CHARGE_TITLE3 NVARCHAR(100) NULL" />
      <stm sql="update PAYMENT_METHODS set RECEIPT_CHARGE_AMOUNT1=(SELECT KEY_VALUE FROM SETTINGS WHERE KEY_WORD='RECEIPT_CHARGE1')" />
      <stm sql="update PAYMENT_METHODS set RECEIPT_CHARGE_AMOUNT2=(SELECT KEY_VALUE FROM SETTINGS WHERE KEY_WORD='RECEIPT_CHARGE2')" />
      <stm sql="update PAYMENT_METHODS set RECEIPT_CHARGE_AMOUNT3=(SELECT KEY_VALUE FROM SETTINGS WHERE KEY_WORD='RECEIPT_CHARGE3')" />
    </stms>
  </mig>
  <mig version="17.36" date="9/3/2020">
    <stms>
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MIN1 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MAX1 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MIN1 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MAX1 FLOAT NULL" />

      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MIN2 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MAX2 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MIN2 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MAX2 FLOAT NULL" />

      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MIN3 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD APPLY_MAX3 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MIN3 FLOAT NULL" />
      <stm sql="ALTER TABLE PAYMENT_METHODS ADD VALUE_MAX3 FLOAT NULL" />
    </stms>
  </mig>
  <mig version="17.37" date="23/3/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('COLLECTION_DIRECTION','desc')" />
    </stms>
  </mig>
  <mig version="17.38" date="31/3/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('MARKETING_TRANS','20-2,20-1,20-4,40-1,40-23')" />
    </stms>
  </mig>
  <mig version="17.39" date="31/3/2020">
    <stms>
      <stm sql="ALTER TABLE USERS ADD MARKETING BIT NULL" />
      <stm sql="ALTER TABLE EMP ADD MARKETING BIT NULL" />
    </stms>
  </mig>
  <mig version="17.40" date="21/4/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('EDAMS_PARTIAL_TRANS_STYPE','1')" />
    </stms>
  </mig>
  <mig version="17.41" date="29/4/2020">
    <stms>
      <stm sql="ALTER TABLE USERS ADD PREPEAR_HAFZA BIT NULL" />
      <stm sql="update USERS set PREPEAR_HAFZA =ALLOW_DEPOSIT" />
    </stms>
  </mig>
  <mig version="17.42" date="21/4/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('READING_DATE_MODE','BILNG_DATE')" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('FIX_EDAMS_PR_DATE1','0')" />
    </stms>
  </mig>
  <mig version="17.43" date="21/4/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('FAWRY_IP','0.0.0.0')" />
    </stms>
  </mig>
  <mig version="17.44" date="28/6/2020">
    <stms>
      <stm sql="ALTER TABLE EMP ADD IS_STORE_MAN BIT NULL "/>
      <stm sql="ALTER TABLE HAND_MH_ST ADD COLLECTION_STAMP BIT NULL "/>
    </stms>
  </mig>
  <mig version="18.0" date="22/7/2020">
    <stms>
      <stm  sql="ALTER TABLE HAND_MH_ST ADD IS_ESTIM_READING BIT NULL "/>
    </stms>
  </mig>
  <mig version="18.01" date="22/7/2020">
    <stms>
      <stm sql="CREATE TABLE dbo.CASH_BOX
	      (
	      ID int NOT NULL,
	      STATION_NO int NOT NULL,
	      DESCRIPTION nvarchar(100) NOT NULL
	      )  ON [PRIMARY]" />
      <stm sql="ALTER TABLE dbo.CASH_BOX ADD CONSTRAINT	PK_CASH_BOX PRIMARY KEY CLUSTERED 	(STATION_NO,	ID	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"/>
      <stm sql="CREATE UNIQUE NONCLUSTERED INDEX IX_CASH_BOX_DESC ON dbo.CASH_BOX(	DESCRIPTION	) "/>
      <stm sql="CREATE TABLE dbo.CASH_BOX_RECEIPTS (SESSION_ID BIGINT not null,DEPOSIT_ID BIGINT not null,CASH_BOX_ID int,CASH_BOX_STATION_NO int,USER_STATION_NO int not null,USER_ID int NOT NULL,USER_NAME VARCHAR(100),TYPE INT NOT NULL,EMP_STATION_NO INT,EMP_ID INT,TRANS_DATE DATETIME NOT NULL,IS_CANCELED BIT NULL,CANCEL_DATE DATETIME,CANCEL_BY VARCHAR(100))"></stm>
      <stm sql="ALTER TABLE dbo.CASH_BOX_RECEIPTS ADD CONSTRAINT	PK_CASH_BOX_RECEIPTS PRIMARY KEY CLUSTERED 	(	USER_STATION_NO,DEPOSIT_ID	)"/>
      <stm sql="CREATE TABLE dbo.CASH_BOX_TRANS_TYPES (ID int not null,DESCRIPTION varchar(60),ENTITY_TYPE varchar(30))"></stm>
      <stm sql="ALTER TABLE dbo.CASH_BOX_TRANS_TYPES ADD CONSTRAINT	PK_CASH_BOX_TRANS_TYPES PRIMARY KEY CLUSTERED 	(	ID	)"/>
      <stm sql="CREATE TABLE dbo.CASH_BOX_SESSIONS (ID BIGINT not null,OPEN_DATE DATETIME not null,CLOSE_DATE DATETIME,USER_STATION_NO INT not null,USER_ID INT not null,CASH_BOX_ID INT not null,CASH_BOX_STATION_NO INT not null,AMOUNT float,COUNT int,STATE int not null)"></stm>
      <stm sql="ALTER TABLE dbo.CASH_BOX_SESSIONS ADD CONSTRAINT	PK_CASH_BOX_SESSIONS PRIMARY KEY CLUSTERED 	(	USER_STATION_NO,ID	)"/>
    </stms>
  </mig>
  <mig version="18.02" date="22/7/2020">
    <stms>
      <stm sql="update RECEIPTS set CANCELLED=0 where CANCELLED is null" />
      <stm sql="alter table RECEIPTS alter column CANCELLED bit not null" />
    </stms>
  </mig>
  <mig version="18.03">
    <stms>
      <stm sql="ALTER TABLE dbo.CASH_BOX_SESSIONS ADD
	      BANK_NAME nvarchar(50) NULL,
	      DOCUMENT_NO nvarchar(50) NULL,
	      DEPOSIT_DATE date NULL"></stm>
    </stms>
  </mig>
  <mig version="18.04">
    <stms>
      <stm sql="ALTER TABLE dbo.EMP ADD KEEPER BIT NULL"></stm>
    </stms>
  </mig>
  <mig version="18.05">
    <stms>
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD WALK_DELIVERY_ID int NULL"></stm>
      <stm sql="CREATE TABLE dbo.WALK_DELIVERY_ITEMS
	    (
	    WALK_DELIVERY_ID int NOT NULL,
	    PAYMENT_NO varchar(50) NOT NULL,
	    CUSTKEY varchar(50) NOT NULL,
      CL_BLNCE float null
	    )"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY_ITEMS ADD CONSTRAINT
	    PK_WALK_DELIVERY_ITEMS PRIMARY KEY CLUSTERED
	    (
	    WALK_DELIVERY_ID,
	    PAYMENT_NO,
	    CUSTKEY
	    )"></stm>
    </stms>
  </mig>
  <mig version="18.06" date="7/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.USERS ADD CASH_BOX bit NULL"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD SWITCH bit NULL"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD UFLAG bit NULL"></stm>
    </stms>
  </mig>
  <mig version="18.07" date="9/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD GARD_PAYMENT_NO varchar(15)"></stm>
    </stms>
  </mig>
  <mig version="18.08" date="9/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.USERS ADD PORTAL BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD SURVEY BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD REPORTS BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD DASHBOARD BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD QUERY BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD DEVICE_MANAGMENT BIT"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD SYNC BIT"></stm>
      <stm sql="UPDATE dbo.USERS SET REPORTS=1,QUERY=1"></stm>
    </stms>
  </mig>
  <mig version="18.09" date="12/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY ADD CANCELLED bit"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY ADD CANCELLED_BY varchar(50)"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY ADD CANCELLED_DATE datetime"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY_ITEMS ADD SEQ_NO int"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY ADD COUNT int"></stm>
      <stm sql="ALTER TABLE dbo.WALK_DELIVERY ADD AMOUNT float"></stm>
    </stms>
  </mig>

  <mig version="18.11" date="12/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.USERS ADD CANCEL_BILL bit null"></stm>
      <stm sql="ALTER TABLE dbo.USERS ADD CANCEL_DELIVERY bit null"></stm>
      <stm sql="CREATE TABLE dbo.CANCELLED_BILLS
	        (
	        PAYMENT_NO varchar(50) NOT NULL,
	        CUSTKEY varchar(50) NOT NULL,
          CL_BLNCE float null,
          CANCELLED_DATE DATETIME null,
          CANCELLED_BY VARCHAR(50) null,
          COUNTER int null
	        )">
      </stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD CONSTRAINT
	            PK_CANCELLED_BILLS PRIMARY KEY CLUSTERED
	            (
	            PAYMENT_NO,
	            CUSTKEY
	            )">
      </stm>
    </stms>
  </mig>
  <mig version="18.12" date="15/8/2020">
    <stms>
      <stm sql="CREATE TABLE dbo.CUST_AGREMS
	      (
	      STATION_NO int NOT NULL,
	      CUSTKEY varchar(50) NOT NULL,
        AGREM_NO int NOT NULL,
	      AGREM_AMOUNT float(53) NOT NULL,
	      NO_INSTALMENTS int NOT NULL,
	      EFF_DATE date NOT NULL,
	      END_DATE date NOT NULL,
	      TYPE INT NOT NULL,
	      NOTE varchar(250) NULL,
	      CANCELED bit NULL,
	      CANCEL_DATE varbinary(50) NULL,
	      CANCEL_BY varchar(50) NULL,
	      CANCEL_NOTE varchar(250) NULL,
	      STAMP_DATE datetime NULL,
	      STAMP_USER varbinary(50) NULL
	      )" />
      <stm sql="ALTER TABLE dbo.CUST_AGREMS ADD CONSTRAINT
	      PK_CUST_AGREMS PRIMARY KEY CLUSTERED
	      (
	      STATION_NO,
	      CUSTKEY,
        AGREM_NO
	      ) " />
      <stm sql="CREATE TABLE dbo.AGREM_TYPES
	      (
	      ID int not NULL,
	      DESCRIPTION varchar(250) not NULL,
	      IS_BILL bit not NULL,
	      IS_SCON bit not NULL,
	      CAN_CANCEL bit NULL,
        TRNS_TYPE int NULL,
	      TRNS_STYPE int NULL,
	      COL_TRNS_TYPE int NULL,
	      COL_TRNS_STYPE int NULL,
	      CANCEL_TRNS_TYPE int  NULL,
	      CANCEL_TRNS_STYPE int  NULL,
	      )" />
      <stm sql="ALTER TABLE dbo.AGREM_TYPES ADD CONSTRAINT
	      PK_AGREEM_TYPES PRIMARY KEY CLUSTERED
	      (
	        ID
	      )" />
      <stm sql="CREATE TABLE dbo.AGREM_INSTALMENTS
	      (
	      STATION_NO int not NULL,
	      CUSTKEY varchar(50) not NULL,
	      AGREM_NO int not NULL,
        INSTALMENT_NO int not null,
	      AMOUNT float(53) not NULL,
	      STATM_NO int NULL,
	      CYCLE_ID int NULL,
	      DUE_DATE date NULL,
	      ISSUE_BILNG_DATE date NULL,
	      COLLECTION_DATE date NULL,
	      COLLECTION_BILNG_DATE nchar(10) NULL,
	      RECEPT_NO varchar(50) NULL,
	      COLLECTION_ID bigint NULL,
	      DEPOSIT_ID bigint NULL
	      )" />
      <stm sql="ALTER TABLE dbo.AGREM_INSTALMENTS ADD CONSTRAINT
	      PK_AGREM_INSTALMENTS PRIMARY KEY CLUSTERED
	      (
	        STATION_NO,
          CUSTKEY,
          AGREM_NO,
          INSTALMENT_NO
	      )" />
    </stms>
  </mig>
  <mig version="18.13" date="15/8/2020">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('PRINT_ON_STREET','0')" />
    </stms>
  </mig>
  <mig version="18.14" date="20/8/2020">
    <stms>
      <stm sql="CREATE TABLE dbo.CONN_DTL_TARIFF_ALLOC
	            (
	            CYCLE_ID int NOT NULL,
	            PROP_REF varchar(50) NOT NULL,
	            CUSTKEY varchar(50) NOT NULL,
	            C_TYPE varchar(50) NOT NULL,
              BILNG_DATE date NULL,
	            ALLOC_PERC decimal(18,5)  NULL,
	            ALLOC_PERC_SEWER decimal(18,5) NULL,
	            NO_UNITS int NULL,
	            ESTIM_CONS_PU decimal(18,5) NULL,
              DESCRIPTION varchar(50) NULL
	            )" />
      <stm sql="ALTER TABLE dbo.CONN_DTL_TARIFF_ALLOC ADD CONSTRAINT
	              PK_CONN_DTL_TARIFF_ALLOC PRIMARY KEY CLUSTERED
	              (
	              CYCLE_ID,
	              CUSTKEY,
                C_TYPE
	              ) " />
    </stms>
  </mig>
  <mig version="18.16" date="23/8/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD IS_MULTI_CONN bit"></stm>
    </stms>
  </mig>
  <mig version="18.17" date="24/8/2020">
    <stms>
      <stm sql="CREATE TABLE dbo.CANCELLED_BILLS_ACTIONS
	            (
              PAYMENT_NO varchar(50) not null,
              CUSTKEY varchar(50) not null,
	            ACTION_ID INT not null,
              COMMENT varchar(250) not null,
              STAMP_DATE datetime not null,
              STAMP_USER varchar(50),
              USER_ID int
	            )" />
      <stm  sql="ALTER TABLE dbo.CANCELLED_BILLS_ACTIONS ADD CONSTRAINT
	              PK_CANCELLED_BILLS_ACTIONS PRIMARY KEY CLUSTERED
	              (
	              PAYMENT_NO,
	              CUSTKEY,
                ACTION_ID,
                STAMP_DATE
	              ) " />
      <stm sql="CREATE TABLE dbo.LU_CANCELLED_BILLS_ACTIONS
	            (
	            ID INT not null,
              DESCRIPTION varchar(100) not null,
              CURRENT_STATE INT,
              NEXT_STATE INT,
              CLOSED BIT
	            )" />
      <stm sql="ALTER TABLE dbo.LU_CANCELLED_BILLS_ACTIONS ADD CONSTRAINT
	              PK_LU_CANCELLED_BILLS_ACTIONS PRIMARY KEY CLUSTERED
	              (
                ID
	              ) " />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD STATE INT"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD CLOSED bit"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD STATION_NO int"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD STATUS varchar(100)"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD SURNAME varchar(100)"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD BILNG_DATE date"></stm>
    </stms>
  </mig>

  <mig version="18.18" date="24/8/2020">
    <stms>
      <stm sql="CREATE TABLE dbo.LU_CANCELLED_BILL_STATES
	            (
                 ID INT not null,
                 DESCRIPTION varchar(100) not null
	            )" />
      <stm  sql="ALTER TABLE dbo.LU_CANCELLED_BILL_STATES ADD CONSTRAINT
	              PK_LU_CANCELLED_BILL_STATES PRIMARY KEY CLUSTERED
	              (
                ID
	              ) " />
    </stms>
  </mig>
  <mig version="18.19" date="26/08/2020">
    <stms>
      <stm sql="ALTER TABLE dbo.LU_CANCELLED_BILLS_ACTIONS ADD START_UP bit"></stm>
    </stms>
  </mig>
  <mig version="18.20" date="27/08/2020">
    <stms>
      <stm skip="1" sql="alter table payment_methods drop constraint  IX_PAYMENT_METHODS"></stm>
      <stm sql="alter table CANCELLED_BILLS alter column surname nvarchar(50)"></stm>
      <stm sql="alter table PAYMENT_METHODS alter column DESCRIPTION nvarchar(250)"></stm>
      <stm sql="alter table PAYMENT_METHODS alter column BILING_CODE nvarchar(250)"></stm>
      <stm sql="alter table RECEIPTS alter column COMMENT nvarchar(250)"></stm>
      <stm sql="alter table CASH_BOX_TRANS_TYPES alter column DESCRIPTION nvarchar(60)"></stm>
      <stm sql="alter table CUST_AGREMS alter column NOTE nvarchar(250)"></stm>
      <stm sql="alter table AGREM_TYPES alter column DESCRIPTION nvarchar(250)"></stm>
      <stm sql="alter table CANCELLED_BILLS_ACTIONS alter column COMMENT nvarchar(250)"></stm>
      <stm sql="alter table CANCELLED_BILLS alter column SURNAME nvarchar(500)"></stm>
      <stm sql="alter table CANCELLED_BILLS alter column STATUS nvarchar(100)"></stm>
      <stm sql="alter table LU_CANCELLED_BILLS_ACTIONS alter column DESCRIPTION nvarchar(100)"></stm>
      <stm sql="alter table LU_CANCELLED_BILL_STATES alter column DESCRIPTION nvarchar(100)"></stm>
      <stm skip="1" sql="alter table payment_methods add  DESCRIPTION nvarchar(50)"></stm>
      <stm skip="1" sql="alter table CONN_DTL_TARIFF_ALLOC add column DESCRIPTION  nvarchar(50)"></stm>
      <stm sql="alter table CONN_DTL_TARIFF_ALLOC alter column DESCRIPTION  nvarchar(50)"></stm>
    </stms>
  </mig>
  <mig version="18.21" date="27/08/2020">
    <stms>
      <stm sql="delete from LU_CANCELLED_BILL_STATES "></stm>
      <stm sql="delete from LU_CANCELLED_BILLS_ACTIONS "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(0,N'غير معالجة') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(1,N'قيد المراجعة قبل الاصدار') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(2,N'قيد استكمال البيانات') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(3,N'قيد الاصدار') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(4,N'قيد مراجعة الاصدار') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(5,N'قيد التحديث') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(6,N'قيد الطباعة') "></stm>
      <stm sql="insert into LU_CANCELLED_BILL_STATES (id,description) values(7,N'جاهزة للتحصيل') "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(1,0,1,1,0,N'الغاء فاتورة' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(2,1,3,0,0,N'اعتماد التعديلات' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(3,1,2,0,0,N'طلب استكمال بيانات' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(4,2,1,0,0,N'اعتماد استكمال البيانات' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(5,3,4,0,0,N'تم اعادة اصدار الفاتورة' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(6,4,5,0,0,N'قبول الاصدار' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(7,4,3,0,0,N'رفض الاصدار' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(8,5,6,0,0,N'تمت التحديث' ) "></stm>
      <stm sql="insert into LU_CANCELLED_BILLS_ACTIONS (id,CURRENT_STATE,NEXT_STATE,start_up,closed,DESCRIPTION) values(9,6,7,0,1,N'تمت الطباعة' ) "></stm>
    </stms>
  </mig>
  <mig version="18.22">
    <stms>
      <stm sql="alter table RECEIPTS alter column STAMP_USER nvarchar(100)"></stm>
    </stms>
  </mig>
  <mig version="18.23">
    <stms>
      <stm sql="alter table PAYMENT_METHODS add SELECTABLE_HH bit"></stm>
    </stms>
  </mig>
  <mig version="18.24">
    <stms>
      <stm skip="1" sql="drop index ix_receipts_c_p_t on  RECEIPTS"></stm>
      <stm skip="1" sql="drop index IX_CUST_PAY_R on  RECEIPTS"></stm>
      <stm skip="1" sql="drop index IX_CUST_REC_R on  RECEIPTS"></stm>
      <stm skip="1" sql="alter table RECEIPTS alter column CUSTKEY nvarchar(60)"></stm>
      <stm skip="1" sql="alter table RECEIPTS alter column PAYMENT_NO nvarchar(60)"></stm>
      <stm skip="1" sql="CREATE NONCLUSTERED INDEX ix_receipts_cp ON dbo.RECEIPTS
	    (
	    CUSTKEY,
	    PAYMENT_NO
	    ) "></stm>
      <stm skip="1" sql="CREATE NONCLUSTERED INDEX ix_receipts_cycle ON dbo.RECEIPTS
	    (
	    CUSTKEY,
	    CYCLE_ID
	    ) "></stm>
      <stm  sql="update RECEIPTS set custkey=ltrim(rtrim(custkey))"/>
      <stm  sql="update RECEIPTS set PAYMENT_NO=ltrim(rtrim(PAYMENT_NO))"/>
      <stm  sql="update RECEIPTS set collection_date=stamp_date where collection_date is null"/>
    </stms>
  </mig>
  <mig version="18.25">
    <stms>
      <stm sql="alter table CASH_BOX_RECEIPTS add AMOUNT float"></stm>
      <stm sql="alter table CASH_BOX_RECEIPTS add CANCEL_AMOUNT float"></stm>
      <stm sql="alter table CASH_BOX_RECEIPTS add EMP_NAME nvarchar(60)"></stm>
    </stms>
  </mig>
  <mig version="18.26">
    <stms>
      <stm sql="CREATE TABLE DEPARTMENTS (ID INT NOT NULL,DESCRIPTION NVARCHAR(60) NOT NULL);"/>
      <stm sql="ALTER TABLE  DEPARTMENTS ADD CONSTRAINT PK_DEPARTMENTS PRIMARY KEY CLUSTERED  (ID) ON [PRIMARY]" />
      <stm sql="alter table USERS add DEPARTMENT INT"></stm>
      <stm sql="alter table LU_CANCELLED_BILLS_ACTIONS add DEPARTMENT INT"></stm>
    </stms>
  </mig>
  <mig version="18.27">
    <stms>
      <stm sql="alter table CUST_AGREMS add STATE INT NOT NULL"></stm>
    </stms>
  </mig>
  <mig version="18.28">
    <stms>
      <stm sql="alter table HAND_MH_ST add TOTAL_CL_BLNCE float NULL"></stm>
    </stms>
  </mig>
  <mig version="19.1">
    <stms>
      <stm skip="1" sql="alter table HAND_MH_ST add ACC_END_DATE date NULL"></stm>
    </stms>
  </mig>
  <mig version="19.2">
    <stms>
      <stm skip="1" sql="CREATE TABLE dbo.STATMENT_TRACER
	      (
	        ID bigint NOT NULL,
	        PAYMENT_NO nvarchar(50) NOT NULL,
          CUSTKEY nvarchar(50) NOT NULL,
	        IS_REMOVED BIT NOT NULL,
	        STAMP_DATE datetime NOT NULL,
	        IS_HH_NOTIFIED bit NOT NULL,
          NOTIFICATION_DATE datetime null,
          IS_ACTION_CANCELLED bit null,
	      )"></stm>
      <stm skip="1" sql="ALTER TABLE dbo.STATMENT_TRACER ADD CONSTRAINT 	PK_STATMENT_TRACER PRIMARY KEY CLUSTERED 	(	ID	) "></stm>
      <stm skip="1" sql="CREATE NONCLUSTERED INDEX IX_STATMENT_TRACER_custkey ON dbo.STATMENT_TRACER
	    (
	        CUSTKEY,PAYMENT_NO,IS_HH_NOTIFIED,IS_ACTION_CANCELLED
	    )" />
    </stms>
  </mig>
  <mig version="19.3">
    <stms>
      <stm skip="1" sql="alter table CTG_CONSUMPTIONTYPES add WEIGHT float NULL" ></stm>
    </stms>
  </mig>

  <mig version="19.4">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_CUST_MOD BIT NULL;" />
    </stms>
  </mig>
  <mig version="19.5">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_ESTIM_READING BIT NULL;" />
    </stms>
  </mig>

  <mig version="19.6">
    <stms>
      <stm sql="CREATE NONCLUSTERED INDEX IX_RECEIPTS_cust_cycle ON dbo.RECEIPTS
	(
	CUSTKEY,
	CYCLE_ID
	) " />
      <stm sql="CREATE NONCLUSTERED INDEX IX_RECEIPTS_hafza ON dbo.RECEIPTS
	    (
	    EMP_ID,
	    DEPOSIT_ID,
	    CANCELLED
	    )  " />
    </stms>
  </mig>
  <mig version="19.7">
    <stms>
      <stm sql="ALTER TABLE HAND_MH_ST ADD RECEIPT_TYPE int NULL;" />
      <stm sql="ALTER TABLE RECEIPTS ADD RECEIPT_TYPE int NULL;" />
    </stms>
  </mig>
  <mig version="19.8">
    <stms>
      <stm sql="CREATE TABLE dbo.CANCELLED_REQUESTS
	    (
	    STATION_NO int NOT NULL,
	    CUSTKEY nvarchar(50) NOT NULL,
	    DOCUMENT_NO nvarchar(50) NOT NULL,
	    REQUEST_DATE datetime NULL,
	    REQUEST_BY nvarchar(50) NULL,
	    STATE int NULL,
	    CLOSED bit NULL,
	    STATUS nvarchar(50) NULL,
	    COMMENT nvarchar(250) NULL,
      COUNTER INT NULL,
      SURNAME nvarchar(100) null
	    )" />
      <stm sql="ALTER TABLE dbo.CANCELLED_REQUESTS ADD CONSTRAINT
	    PK_CANCELLED_REQUESTS PRIMARY KEY CLUSTERED
	    (
	    STATION_NO,
	    CUSTKEY,
	    DOCUMENT_NO
	    ) " />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS 	DROP CONSTRAINT PK_CANCELLED_BILLS" />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD DOCUMENT_NO VARCHAR(50) " />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD COMMENT NVARCHAR(250) " />
      <stm sql="UPDATE dbo.CANCELLED_BILLS SET DOCUMENT_NO =PAYMENT_NO where DOCUMENT_NO is null " />
      <stm sql="alter table [dbo].[CANCELLED_BILLS] alter column DOCUMENT_NO varchar(50) not null" />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD CONSTRAINT
	      PK_CANCELLED_BILLS PRIMARY KEY CLUSTERED
	      (
        DOCUMENT_NO,
	      PAYMENT_NO,
	      CUSTKEY
	      )" />
      <stm sql="EXECUTE sp_rename N'dbo.CANCELLED_BILLS_ACTIONS.PAYMENT_NO', N'DOCUMENT_NO', 'COLUMN'" />
    </stms>
  </mig>
  <mig date="29/1/2021" version="20.0" note="clean up hand_mh_st">
    <stms>
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COLLECTION_DAY" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column stm_note" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column mhh_note" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column DISCOUNT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column DISCOUNT_DOCUMENT_NO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_BY_CHEQUE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CHEQUE_NO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CHEQUE_BANK" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CHEQUE_DATE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COLLECTOR_ID" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_COLLECTED_BY_HHDEVICE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_COLLECTED_BY_OTHERS" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_BY_CASHIER" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column STR_VALUE_C1" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column STR_VALUE_C2" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column STR_VALUE_R2" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column NOTE_DATE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column NOTE_DATE_R" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column VALUE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column FAX_NO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column NID" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column TEL" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column EMAIL" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_COMPENSATE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COMPENSATE_PAYMENTNO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column VALUE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column FLAGE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column pay_by" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SOURCE_TYPE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CONNECTION_ADDRESS" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SOURCE_NAME" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column FLAGE_R" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SECTOR_CODE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_READED_BYHH" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column NOTIFICATION_DATE" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column PATCH_NO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_REUPDATED" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SUPER_LOCK_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OLD_DEPOSITID" />
      <stm skip="1" sql="update dbo.HAND_MH_ST set IS_HH_NOTIFIED=IS_NOTIFIED where IS_HH_NOTIFIED is null" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_NOTIFIED" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column RECIPT_NO" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_HQ_NOTIFIED" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column descr_msg" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SYNC_ST_R" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SYNC_ST_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column IS_POSTED_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column POST_DATE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COLLECTION_STAMP" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column POST_DATE_C" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column POST_DATE_C" />
    </stms>
  </mig>
  <mig date="29/1/2021" version="20.02" note="clean up hand_mh_st">
    <stms>
      <stm skip="1" sql="drop table dbo.HAND_CUSTS " />
      <stm skip="1" sql="drop table dbo.HAND_RDGS " />
      <stm skip="1" sql="drop table dbo.HAND_STMS" />
      <stm skip="1" sql="drop table dbo.HAND_MASTER" />
      <stm skip="1"  sql="drop table dbo.HAND_CUSTS" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST drop column stm_on_c" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST drop column mhh_on_c" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column stm_on_r" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST drop column mhh_on_r" />
    </stms>
  </mig>
  <mig date="29/1/2021" version="20.03" note="transfeer to BILL_ITEMS">
    <stms>
      <stm sql="SELECT  [STATION_NO]
      ,[CUSTKEY]
      ,[CYCLE_ID]
      ,[OP_BLNCE]
      ,[cl_blnce]
      ,[CUR_PAYMNTS]
      ,[WATER_AMT]
      ,[SEWER_AMT]
      ,[BASIC_AMT]
      ,[TAX_AMT]
      ,[INSTALLS_AMT]
      ,[DBT_AMT]
      ,[CRDT_AMT]
      ,[AGREEM_AMT]
      ,[OTHER_AMT]
      ,[OTHER_AMT1]
      ,[OTHER_AMT2]
      ,[OTHER_AMT3]
      ,[OTHER_AMT4]
      ,[OTHER_AMT5]
      ,[TAKAFUL_AMT]
      ,[TANZEEM_AMT]
      ,[METER_INSTALLS_AMT]
      ,[CONN_INSTALLS_AMT]
      ,[ROUND_AMT]
      ,[METER_AMT]
      ,[CONN_AMT]
      ,[METER_MAN_AMT]
      ,[COMPUTER_AMT]
      ,[CONTRACT_AMT]
      ,[GOV_AMT]
      ,[UNI_AMT]
      ,[OTHER_CUR_AMT]
      ,[CLEAN_AMT]
      ,[COLLECTION_AMT]
      ,[PARTIAL_CUR_AMT]
	  into
	  BILL_ITEMS
  FROM [dbo].[HAND_MH_ST] where is_collection_row=1" />
      <stm sql="ALTER TABLE dbo.BILL_ITEMS ADD CONSTRAINT
	      PK_BILL_ITEMS PRIMARY KEY CLUSTERED
	      (
        STATION_NO,
	      CYCLE_ID,
	      CUSTKEY
	      )" />
      <stm sql="insert into dbo.bill_items ([STATION_NO]
      ,[CUSTKEY]
      ,[CYCLE_ID]
      ,[OP_BLNCE]
      ,[cl_blnce]
      ,[CUR_PAYMNTS]
      ,[WATER_AMT]
      ,[SEWER_AMT]
      ,[BASIC_AMT]
      ,[TAX_AMT]
      ,[INSTALLS_AMT]
      ,[DBT_AMT]
      ,[CRDT_AMT]
      ,[AGREEM_AMT]
      ,[OTHER_AMT]
      ,[OTHER_AMT1]
      ,[OTHER_AMT2]
      ,[OTHER_AMT3]
      ,[OTHER_AMT4]
      ,[OTHER_AMT5]
      ,[TAKAFUL_AMT]
      ,[TANZEEM_AMT]
      ,[METER_INSTALLS_AMT]
      ,[CONN_INSTALLS_AMT]
      ,[ROUND_AMT]
      ,[METER_AMT]
      ,[CONN_AMT]
      ,[METER_MAN_AMT]
      ,[COMPUTER_AMT]
      ,[CONTRACT_AMT]
      ,[GOV_AMT]
      ,[UNI_AMT]
      ,[OTHER_CUR_AMT]
      ,[CLEAN_AMT]
      ,[COLLECTION_AMT]
      ,[PARTIAL_CUR_AMT] )
      SELECT  [STATION_NO]
      ,[CUSTKEY]
      ,[CYCLE_ID]
      ,[OP_BLNCE]
      ,[cl_blnce]
      ,[CUR_PAYMNTS]
      ,[WATER_AMT]
      ,[SEWER_AMT]
      ,[BASIC_AMT]
      ,[TAX_AMT]
      ,[INSTALLS_AMT]
      ,[DBT_AMT]
      ,[CRDT_AMT]
      ,[AGREEM_AMT]
      ,[OTHER_AMT]
      ,[OTHER_AMT1]
      ,[OTHER_AMT2]
      ,[OTHER_AMT3]
      ,[OTHER_AMT4]
      ,[OTHER_AMT5]
      ,[TAKAFUL_AMT]
      ,[TANZEEM_AMT]
      ,[METER_INSTALLS_AMT]
      ,[CONN_INSTALLS_AMT]
      ,[ROUND_AMT]
      ,[METER_AMT]
      ,[CONN_AMT]
      ,[METER_MAN_AMT]
      ,[COMPUTER_AMT]
      ,[CONTRACT_AMT]
      ,[GOV_AMT]
      ,[UNI_AMT]
      ,[OTHER_CUR_AMT]
      ,[CLEAN_AMT]
      ,[COLLECTION_AMT]
      ,[PARTIAL_CUR_AMT]
	  BILL_ITEMS
  FROM [dbo].[ARC_HAND_MH_ST] where is_collection_row=1"/>
    </stms>
  </mig>
  <mig date="29/1/2021" version="20.04" note="">
    <stms>
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column WATER_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column SEWER_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column BASIC_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column TAX_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column INSTALLS_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column DBT_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CRDT_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column AGREEM_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column TAKAFUL_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column TANZEEM_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column METER_INSTALLS_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CONN_INSTALLS_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT1" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT2" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT3" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT4" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_AMT5" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CONN_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column METER_MAN_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COMPUTER_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CONTRACT_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column GOV_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column UNI_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column OTHER_CUR_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column CLEAN_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column COLLECTION_AMT" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST drop column PARTIAL_CUR_AMT" />
    </stms>
  </mig>
  <mig version="20.05">
    <stms>
      <stm skip="1" sql="ALTER TABLE dbo.HAND_MH_ST DROP COLUMN stm_on_c" />
      <stm skip="1" sql="ALTER TABLE dbo.HAND_MH_ST DROP COLUMN stm_on_r" />
      <stm skip="1" sql="ALTER TABLE dbo.HAND_MH_ST DROP COLUMN mhh_on_c" />
      <stm skip="1" sql="ALTER TABLE dbo.HAND_MH_ST DROP COLUMN stm_on_r" />
      <stm skip="1" sql="ALTER TABLE dbo.ARC_HAND_MH_ST ADD CONSTRAINT
	    PK_ARC_HAND_MH_ST_1 PRIMARY KEY CLUSTERED
	    (
	    CUSTKEY,
	    CYCLE_ID
	    ) "/>
    </stms>
  </mig>
  <mig version="20.06">
    <stms>
      <stm skip="1" sql="EXEC sp_rename 'ARC_HAND_MH_ST.INSTALEMNT_DATE', 'INSTALMENT_DATE'"/>
      <stm skip="1" sql="alter table HAND_MH_ST add ACC_END_DATE date NULL"></stm>
      <stm skip="1" sql="alter table ARC_HAND_MH_ST add ACC_END_DATE date NULL"></stm>
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD CUSTOMER_ID BIGINT NULL" />
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD PROPERTY_ID BIGINT NULL" />
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD CONNECTION_ID BIGINT NULL" />
      <stm sql="ALTER TABLE dbo.HAND_MH_ST ADD METER_ID BIGINT NULL" />
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('EDMAS_FROM_METER_RDG',0)" />
    </stms>
  </mig>
  <mig version="20.07">
    <stms>
      <stm sql="INSERT INTO SETTINGS(KEY_WORD,KEY_VALUE) VALUES('ENABLE_BATCH',0)" />
    </stms>
  </mig>
  <mig version="20.08">
    <stms>
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column stm_on_c int null" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column mhh_on_c int null" />
      <stm skip="1" sql="alter table dbo.HAND_MH_ST alter column stm_on_r int null" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column mhh_on_r int null" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column SYNC_ST_C int null" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column SYNC_MAS_ST int null" />
      <stm skip="1"  sql="alter table dbo.HAND_MH_ST alter column SYNC_MAS_HH int null" />
    </stms>
  </mig>
  <mig version="20.09">
    <stms>
      <stm sql="ALTER TABLE USERS ADD ALLOW_BATCH_ESTIM_READING BIT NULL" />
      <stm sql="UPDATE USERS set ALLOW_BATCH_ESTIM_READING=ALLOW_ESTIM_READING" />
    </stms>
  </mig>
  <mig version="20.10">
    <stms>
      <stm sql="CREATE NONCLUSTERED INDEX IX_BILL_ITEMS_CUSTKEY ON dbo.BILL_ITEMS
	    (
	    CUSTKEY
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" />

      <stm skip="1" sql="CREATE NONCLUSTERED INDEX IX_HAND_CUSTKEY ON dbo.HAND_MH_ST
	    (
	    CUSTKEY
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" />

      <stm skip="1" sql="CREATE NONCLUSTERED INDEX IX_ARC_HAND_CUSTKEY ON dbo.ARC_HAND_MH_ST
	    (
	    CUSTKEY
	    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" />
    </stms>
  </mig>
  <mig version="20.11">
    <stms>
      <stm sql="ALTER TABLE CONN_DTL_TARIFF_ALLOC ADD UPDATE_DATE datetime NULL" />
    </stms>
  </mig>
  <mig version="20.12">
    <stms>
      <stm>
        <stm skip="1" sql="ALTER TABLE dbo.BILL_ITEMS DROP COLUMN OP_BLNCE" />
        <stm skip="1" sql="ALTER TABLE dbo.BILL_ITEMS DROP COLUMN cl_blnce" />
        <stm skip="1" sql="ALTER TABLE dbo.BILL_ITEMS DROP COLUMN CUR_PAYMNTS" />
      </stm>
    </stms>
  </mig>
  <mig version="21.00">
    <stms>
      <stm sql="CREATE TABLE [dbo].[CTG_CONSUMPTION_SERVICETARIFF](
	  [CTYPE_ID] [nvarchar](50) NOT NULL,
	  [SERVICE_TYPE] [int] NOT NULL,
	  [TRANS_CODE] [nvarchar](50) NOT NULL,
	  [TARIFF_ID] [nvarchar](50) NOT NULL,
	  [CTYPEGRP_ID] [nvarchar](50) NULL,
	  [IS_ZERO_TARIF] [bit] NULL,
	  [TAX_PERCENTAGE] [float] NULL,
	  [DISCOUNT_PERCENTAGE] [float] NULL,
   CONSTRAINT [PK_CTG_CONSUMPTION_SERVICETARIFF] PRIMARY KEY CLUSTERED
  (
	  [CTYPE_ID] ASC,
	  [SERVICE_TYPE] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
)"></stm>
      <stm sql="CREATE TABLE [dbo].[REGULAR_CHARGES](
	[REGULAR_CHARGE_ID] [int] NOT NULL,
	[REGULAR_CHARE_CODE] [nvarchar](50) NOT NULL,
	[EFFECT_DATE] [date] NOT NULL,
	[SERVICE_TYPE] [int] NOT NULL,
	[TRANS_CODE] [nvarchar](50) NOT NULL,
	[TITLE] [nvarchar](250) NOT NULL,
	[CHARGE_TYPE] [int] NOT NULL,
	[IS_CHARGABLE] [bit] NOT NULL,
	[CHARGE_CALC_PERIOD] [int] NOT NULL,
	[CHARGE_INTERVAL] [bigint] NULL,
	[CHARGE_MONTHLY_DAY] [bigint] NULL,
	[FIXED_CHARGE] [float] NULL,
	[FIXED_CHARGE_DISCOUNT] [float] NULL,
	[MIN_CHARGE] [float] NULL,
	[VAT_PERCENTAGE] [float] NULL,
	[RELATION_CHARGE_CODE] [nvarchar](128) NULL,
	[RELATION_CHARGE_ENTITY_TYPE] [int] NULL,
	[RELATION_ENABLE_CODE] [nvarchar](128) NULL,
	[RELATION_ENABLE_ENTITY_TYPE] [int] NULL,
	[BY_PASS] [bit] NULL,
	[CALC_STARTEGY] [int] NULL,
	[PER_UNIT] [bit] NULL,
 CONSTRAINT [PK_REGULAR_CHARGES_1] PRIMARY KEY CLUSTERED
(
	[REGULAR_CHARGE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
)"></stm>
      <stm sql="CREATE TABLE [dbo].[REGULAR_RELATION_ENTITY](
	[REGULAR_CHARGE_ID] [int] NOT NULL,
	[RELEATION_TYPE] [int] NOT NULL,
	[ENTITY_TYPE] [int] NOT NULL,
 CONSTRAINT [PK_REGULAR_RELATION_ENTITY_1] PRIMARY KEY CLUSTERED
(
	[REGULAR_CHARGE_ID] ASC,
	[RELEATION_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]"></stm>
      <stm sql="CREATE TABLE [dbo].[REGULAR_RELATION_VALUES](
	[REGULAR_CHARGE_ID] [int] NOT NULL,
	[ENTITY_TYPE] [int] NOT NULL,
	[LU_KEY] [nvarchar](128) NULL,
	[FROM] [float] NULL,
	[TO] [float] NULL,
	[VALUE] [float] NULL,
	[ENABLE_VALUE] [bit] NULL,
 CONSTRAINT [PK_REGULAR_RELATION_MAPPED_VALUES] PRIMARY KEY CLUSTERED
(
	[REGULAR_CHARGE_ID] ASC,
	[ENTITY_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
)"></stm>
      <stm sql="
CREATE TABLE [dbo].[TARIFFS](
	[TARRIF_ID] [int] NOT NULL,
	[TARIFF_CODE] [nvarchar](50) NOT NULL,
	[EFFECT_DATE] [date] NOT NULL,
	[DESCRIPTION] [nvarchar](250) NOT NULL,
 CONSTRAINT [PK_TARIFFS] PRIMARY KEY CLUSTERED
(
	[TARRIF_ID] ASC
))"></stm>
      <stm sql="CREATE TABLE [dbo].[TARIFF_BANDS](
	[TARIFF_ID] [nvarchar](128) NOT NULL,
	[EFFECT_DATE] [date] NOT NULL,
	[RANGE_FROM] [float] NOT NULL,
	[RANGE_TO] [float] NOT NULL,
	[CONSTANT] [float] NOT NULL,
	[CHARGE] [float] NOT NULL,
 CONSTRAINT [PK_TARIFF_BANDS] PRIMARY KEY CLUSTERED
(
	[TARIFF_ID] ASC,
	[EFFECT_DATE] ASC,
	[RANGE_FROM] ASC,
	[RANGE_TO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]">
      </stm>
      <stm sql="CREATE TABLE [dbo].[TARIFF_EXTRA_FESS](
	[TARIFF_ID] [int] NOT NULL,
	[TRANS_CODE] [nvarchar](128) NOT NULL,
	[DESCRIPTION] [nvarchar](max) NULL,
	[AMOUNT_PER_METER] [float] NULL,
	[AMOUNT_PER_PERCENTAGE] [float] NULL,
	[FIXED_AMOUNT] [float] NULL,
 CONSTRAINT [PK_TARIFF_EXTRA_FESS] PRIMARY KEY CLUSTERED
(
	[TARIFF_ID] ASC,
	[TRANS_CODE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]"></stm>
      <stm sql="CREATE UNIQUE NONCLUSTERED INDEX IX_TARIFFS ON dbo.TARIFFS
	(
	TARIFF_CODE,
	EFFECT_DATE
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]"></stm>
      <stm sql="CREATE UNIQUE NONCLUSTERED INDEX IX_REGULAR_CHARGES_1 ON dbo.REGULAR_CHARGES
	(
	REGULAR_CHARE_CODE,
	EFFECT_DATE
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]">

      </stm>
    </stms>
  </mig>
  <mig version="21.01">
    <stms>
      <stm sql="ALTER TABLE STATMENT_TRACER ADD EMP_ID int NULL" />
    </stms>
  </mig>
  <mig version="21.02">
    <stms>
      <stm sql="ALTER TABLE CANCELLED_REQUESTS ADD STAMP_DATE datetime NULL" />
      <stm sql="ALTER TABLE CANCELLED_REQUESTS ADD FORM_NO bigint NULL" />
      <stm sql="ALTER TABLE CANCELLED_BILLS ADD FORM_NO bigint NULL" />
      <stm sql="ALTER TABLE CANCELLED_BILLS_ACTIONS ADD FORM_NO bigint NULL" />
      <stm sql="
          SELECT
             ROW_NUMBER() OVER (
	          ORDER BY request_date,station_no
             ) form_no,
             DOCUMENT_NO,
             STATION_NO,
             CUSTKEY into CANCELLED_REQUESTS_FORMS
          FROM    CANCELLED_REQUESTS" ></stm>
      <stm sql="update CANCELLED_REQUESTS set FORM_NO=(select f.form_no from CANCELLED_REQUESTS_FORMS f
where f.CUSTKEY=CANCELLED_REQUESTS.CUSTKEY
and f.STATION_NO=CANCELLED_REQUESTS.STATION_NO
and f.DOCUMENT_NO=CANCELLED_REQUESTS.DOCUMENT_NO)" />
      <stm sql="ALTER TABLE dbo.CANCELLED_REQUESTS alter column FORM_NO BIGINT NOT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.CANCELLED_REQUESTS	DROP CONSTRAINT PK_CANCELLED_REQUESTS"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_REQUESTS ADD CONSTRAINT
	    PK_CANCELLED_REQUESTS PRIMARY KEY CLUSTERED
	    (
      FORM_NO
	    ) " />
      <stm sql="update CANCELLED_BILLS set FORM_NO=(select r.FORM_NO from CANCELLED_REQUESTS r
           where r.custkey=CANCELLED_BILLS.custkey and r.station_no=CANCELLED_BILLS.station_no)"/>
      <stm skip="1" sql ="select * into dbo.CANCELLED_BILLS_bakup from dbo.CANCELLED_BILLS "></stm>
      <stm sql ="delete from dbo.CANCELLED_BILLS where form_no is null "></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS alter column FORM_NO BIGINT NOT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.CANCELLED_BILLS	DROP CONSTRAINT PK_CANCELLED_BILLS"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS ADD CONSTRAINT
	            PK_CANCELLED_BILLS PRIMARY KEY CLUSTERED
	            (
              FORM_NO,
	            PAYMENT_NO,
	            CUSTKEY
	            )"></stm>

      <stm sql="update CANCELLED_BILLS_ACTIONS set FORM_NO=(select r.FORM_NO from CANCELLED_REQUESTS r
           where r.custkey=CANCELLED_BILLS_ACTIONS.custkey)"/>
      <stm skip="1" sql="select * into CANCELLED_BILLS_ACTIONS_backup from CANCELLED_BILLS_ACTIONS "></stm>
      <stm sql="delete from CANCELLED_BILLS_ACTIONS where form_no is null"></stm>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS_ACTIONS alter column FORM_NO BIGINT NOT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.CANCELLED_BILLS_ACTIONS	DROP CONSTRAINT PK_CANCELLED_BILLS_ACTIONS"></stm>
      <stm  sql="ALTER TABLE dbo.CANCELLED_BILLS_ACTIONS ADD CONSTRAINT
	              PK_CANCELLED_BILLS_ACTIONS PRIMARY KEY CLUSTERED
	              (
                FORM_NO,
	              DOCUMENT_NO,
	              CUSTKEY,
                ACTION_ID,
                STAMP_DATE
	              ) " />
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS alter column DOCUMENT_NO NVARCHAR(255) NOT NULL"/>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS alter column DOCUMENT_NO NVARCHAR(255) NOT NULL"/>
      <stm sql="ALTER TABLE dbo.CANCELLED_BILLS alter column DOCUMENT_NO NVARCHAR(255) NOT NULL"/>
    </stms>
  </mig>
  <mig version="21.04">
    <stms>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD WALK_DELIVERY_ID int NULL"></stm>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD GARD_PAYMENT_NO varchar(15)"></stm>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD IS_MULTI_CONN bit"></stm>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD RECEIPT_TYPE int NULL;" />
      <stm skip="1" sql="alter table HAND_MH_ST alter column SYNC_MAS_HH int null" />
      <stm skip="1" sql="alter table HAND_MH_ST alter column SYNC_MAS_ST int null" />
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST	add STOP_ISSUE bit null" />
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST ADD WALK_DELIVERY_ID int NULL"></stm>
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST ADD GARD_PAYMENT_NO varchar(15)"></stm>
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST ADD IS_MULTI_CONN bit"></stm>
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST ADD RECEIPT_TYPE int NULL;" />
      <stm skip="1" sql="alter table ARC_HAND_MH_ST alter column SYNC_MAS_HH int null" />
      <stm skip="1" sql="alter table ARC_HAND_MH_ST alter column SYNC_MAS_ST int null" />
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST	add STOP_ISSUE bit null" />
    </stms>
  </mig>
  <mig version="22.0" date="27/03/2021">
    <stms>
      <stm skip="1" sql="CREATE TABLE dbo.RECALC
	              (
	                RECALC_ID bigint NOT NULL,
	                STATION_NO int NOT NULL,
	                CUSTKEY nvarchar(50) NOT NULL,
	                START_DATE date NULL,
	                END_DATE date NULL,
	                STAMP_DATE datetime NULL,
	                STAMP_USER nvarchar(50) NULL,
	                USER_STATION_NO int NULL,
                  FORM_NO bigint null
	              )"/>
      <stm skip="1" sql="ALTER TABLE dbo.RECALC ADD CONSTRAINT
	          PK_RECALC PRIMARY KEY CLUSTERED
	          (
                STATION_NO,
	              RECALC_ID
	          ) "/>
      <stm skip="1" sql="ALTER TABLE BILL_ITEMS ADD RECALC_ID BIGINT NULL"/>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD RECALC_ID BIGINT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.BILL_CTYPES ADD
	    BASIC_AMT float(53) NULL,
	    TAX_AMT float(53) NULL,
	    INSTALLS_AMT float(53) NULL,
	    DBT_AMT float(53) NULL,
	    CRDT_AMT float(53) NULL,
	    AGREEM_AMT float(53) NULL,
	    OTHER_AMT1 float(53) NULL,
	    OTHER_AMT2 float(53) NULL,
	    OTHER_AMT3 float(53) NULL,
	    OTHER_AMT4 float(53) NULL,
	    OTHER_AMT5 float(53) NULL,
	    TAKAFUL_AMT float(53) NULL,
	    TANZEEM_AMT float(53) NULL,
	    METER_INSTALLS_AMT float(53) NULL,
	    CONN_INSTALLS_AMT float(53) NULL,
	    ROUND_AMT float(53) NULL,
	    METER_AMT float(53) NULL,
	    CONN_AMT float(53) NULL,
	    METER_MAN_AMT float(53) NULL,
	    COMPUTER_AMT float(53) NULL,
	    CONTRACT_AMT float(53) NULL,
	    GOV_AMT float(53) NULL,
	    UNI_AMT float(53) NULL,
	    OTHER_CUR_AMT float(53) NULL,
	    CLEAN_AMT float(53) NULL,
	    COLLECTION_AMT float(53) NULL,
	    PARTIAL_CUR_AMT float(53) NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.BILL_CTYPES ADD
	              NO_UNITS int NULL,
	              CONSUMP float(53) NULL,
	              CONSUMP_TYPE int NULL,
	              CONSUMP_PERC float(53) NULL,
                RECALC_ID bigint NULL"></stm>

      <stm skip="1" sql="SELECT * into HST_BILL_CTYPE FROM BILL_CTYPES where 1=0"/>
      <stm skip="1" sql="ALTER TABLE HST_BILL_CTYPE ALTER COLUMN RECALC_ID bigint NOT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.HST_BILL_CTYPE ADD CONSTRAINT
	          PK_HST_BILL_CTYPES PRIMARY KEY CLUSTERED
	          (
                STATION_NO,
                CUSTKEY,
                CYCLE_ID,
                C_TYPE,
	              RECALC_ID
	          ) "/>
      <stm skip="1" sql="SELECT * into HST_BILL_ITEMS FROM BILL_ITEMS where 1=0"/>
      <stm skip="1"  sql="ALTER TABLE HST_BILL_ITEMS ALTER COLUMN RECALC_ID bigint NOT NULL"/>
      <stm skip="1" sql="ALTER TABLE dbo.HST_BILL_ITEMS ADD CONSTRAINT
	          PK_HST_BILL_ITEMS PRIMARY KEY CLUSTERED
	          (
                STATION_NO,
                CUSTKEY,
                CYCLE_ID,
	              RECALC_ID
	          ) "/>
      <stm skip="1" sql="SELECT * INTO HST_HAND_MH_ST FROM HAND_MH_ST where 1=0"/>

      <stm skip="1" sql="ALTER TABLE HST_HAND_MH_ST ALTER COLUMN RECALC_ID bigint NOT NULL"/>

      <stm skip="1" sql="ALTER TABLE dbo.HST_HAND_MH_ST ADD CONSTRAINT
	          PK_HST_HAND_MH_ST PRIMARY KEY CLUSTERED
	          (
                STATION_NO,
                CUSTKEY,
                CYCLE_ID,
	              RECALC_ID
	          ) "/>

    </stms>
  </mig>
  <mig version="22.01">
    <stms>
      <stm skip="1" sql="ALTER TABLE LU_CANCELLED_BILL_STATES ALTER COLUMN RECAL_READY bit NULL"></stm>
      <stm skip="1" sql="ALTER TABLE LU_CANCELLED_BILLS_ACTIONS ALTER COLUMN RECALC_DONE_ACTION bit NULL"></stm>
    </stms>
  </mig>
  <mig version="22.02">
    <stms>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST  ADD IS_MANUAL_ESTIM bit NULL"></stm>
    </stms>
  </mig>

  <mig version="22.03">
    <stms>
      <stm skip="1" sql="ALTER TABLE RECEIPTS ADD PRINT_PERCENTAGE FLOAT NULL"></stm>
      <stm skip="1" sql="ALTER TABLE PRINT_LOGS ADD PRINT_PERCENTAGE FLOAT NULL"></stm>
    </stms>
  </mig>
  <mig version="22.04">
    <stms>
      <stm skip="1" sql="ALTER TABLE dbo.HST_BILL_CTYPE ADD CONSTRAINT
	          PK_HST_BILL_CTYPES PRIMARY KEY CLUSTERED
	          (
                CUSTKEY,
                CYCLE_ID,
                C_TYPE,
	              RECALC_ID
	          ) "/>
    </stms>
  </mig>
  <mig version="22.05" date="10/6/2021">
    <stms>
      <stm skip="1" sql="EXEC sp_rename 'HST_BILL_CTYPE', 'HST_BILL_CTYPES'"/>
    </stms>
  </mig>
  <mig version="22.06" date="5/7/2021">
    <stms>
      <stm skip="1" sql="ALTER TABLE HAND_MH_ST ADD CONN_STATUS INT NULL"/>
      <stm skip="1" sql="ALTER TABLE HST_HAND_MH_ST ADD CONN_STATUS INT NULL"/>
      <stm skip="1" sql="ALTER TABLE ARC_HAND_MH_ST ADD CONN_STATUS INT NULL"/>
    </stms>
  </mig>
</migs>